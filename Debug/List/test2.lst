
AVRASM ver. 2.1.30  C:\Users\Asus\Desktop\cable_tester\test2\Debug\List\test2.asm Thu Sep 18 14:45:45 2025

C:\Users\Asus\Desktop\cable_tester\test2\Debug\List\test2.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\Asus\Desktop\cable_tester\test2\Debug\List\test2.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\Asus\Desktop\cable_tester\test2\Debug\List\test2.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16A
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00d0 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0119 	JMP  _timer0_ovf_isr
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 00fd 	JMP  _ext_int2_isr
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x3:
000033 01e6      	.DB  LOW(_Menu_Cable_Select),HIGH(_Menu_Cable_Select)
                 _0x4:
000034 01ae      	.DB  LOW(_write_port),HIGH(_write_port)
                 _0x5:
000035 01bb      	.DB  LOW(___read_PIN__),HIGH(___read_PIN__)
                 _0x6:
000036 01b3      	.DB  LOW(_Delay),HIGH(_Delay)
                 _0x20003:
000037 6554
000038 7473
000039 5220
00003a 6e75      	.DB  0x54,0x65,0x73,0x74,0x20,0x52,0x75,0x6E
00003b 2020
00003c 2020
00003d 2020
00003e 0000      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x0,0x0
00003f 6143
000040 6c62
000041 2065
000042 6553      	.DB  0x43,0x61,0x62,0x6C,0x65,0x20,0x53,0x65
000043 656c
000044 7463
000045 2020
000046 0020      	.DB  0x6C,0x65,0x63,0x74,0x20,0x20,0x20,0x0
000047 6143
000048 6c62
000049 2065
00004a 6564      	.DB  0x43,0x61,0x62,0x6C,0x65,0x20,0x64,0x65
00004b 6966
00004c 656e
00004d 2020
00004e 0020      	.DB  0x66,0x69,0x6E,0x65,0x20,0x20,0x20,0x0
00004f 6241
000050 756f
000051 2074
000052 654d      	.DB  0x41,0x62,0x6F,0x75,0x74,0x20,0x4D,0x65
000053 2020
000054 2020
000055 2020
C:\Users\Asus\Desktop\cable_tester\test2\Debug\List\test2.asm(1143): warning: .cseg .db misalignment - padding zero byte
000056 0020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20
                 _0x20000:
000057 3e2d
000058 7325
000059 2d00
00005a 203e      	.DB  0x2D,0x3E,0x25,0x73,0x0,0x2D,0x3E,0x20
00005b 6163
00005c 6c62
00005d 2565
00005e 3230      	.DB  0x63,0x61,0x62,0x6C,0x65,0x25,0x30,0x32
00005f 2064
000060 2020
000061 2020
000062 2000      	.DB  0x64,0x20,0x20,0x20,0x20,0x20,0x0,0x20
000063 2020
000064 6163
000065 6c62
000066 2565      	.DB  0x20,0x20,0x63,0x61,0x62,0x6C,0x65,0x25
000067 3230
000068 2064
000069 2020
00006a 0020      	.DB  0x30,0x32,0x64,0x20,0x20,0x20,0x20,0x0
00006b 2d2d
00006c 203e
00006d 7325
00006e 2000      	.DB  0x2D,0x2D,0x3E,0x20,0x25,0x73,0x0,0x20
00006f 2020
000070 2020
000071 4150
000072 5353      	.DB  0x20,0x20,0x20,0x20,0x50,0x41,0x53,0x53
000073 2021
000074 2020
000075 2020
000076 2000      	.DB  0x21,0x20,0x20,0x20,0x20,0x20,0x0,0x20
000077 2020
000078 4620
000079 6961
00007a 656c      	.DB  0x20,0x20,0x20,0x46,0x61,0x69,0x6C,0x65
00007b 2164
00007c 2020
00007d 2020
00007e 2500      	.DB  0x64,0x21,0x20,0x20,0x20,0x20,0x0,0x25
00007f 3230
000080 2d64
000081 253e
000082 3230      	.DB  0x30,0x32,0x64,0x2D,0x3E,0x25,0x30,0x32
000083 2064
000084 2020
000085 7250
000086 666f      	.DB  0x64,0x20,0x20,0x20,0x50,0x72,0x6F,0x66
000087 253d
000088 3230
000089 0064
00008a 5e20      	.DB  0x3D,0x25,0x30,0x32,0x64,0x0,0x20,0x5E
00008b 2020
00008c 2020
00008d 2020
00008e 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00008f 2020
000090 2020
000091 2020
000092 0020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x0
000093 2020
000094 2020
000095 5e20
000096 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x5E,0x20,0x20
000097 2020
000098 2020
000099 2020
00009a 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00009b 0020
00009c 2020
00009d 2020
00009e 2020      	.DB  0x20,0x0,0x20,0x20,0x20,0x20,0x20,0x20
00009f 2020
0000a0 2020
0000a1 2020
0000a2 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0000a3 5e20
0000a4 2000
0000a5 6143
0000a6 6c62      	.DB  0x20,0x5E,0x0,0x20,0x43,0x61,0x62,0x6C
0000a7 2065
0000a8 6554
0000a9 7473
0000aa 5620      	.DB  0x65,0x20,0x54,0x65,0x73,0x74,0x20,0x56
0000ab 3025
0000ac 6432
0000ad 0020
0000ae 2020      	.DB  0x25,0x30,0x32,0x64,0x20,0x0,0x20,0x20
0000af 2020
0000b0 2020
0000b1 534e
0000b2 2043      	.DB  0x20,0x20,0x20,0x20,0x4E,0x53,0x43,0x20
0000b3 2020
0000b4 2020
0000b5 0020      	.DB  0x20,0x20,0x20,0x20,0x20,0x0
                 _0x2020060:
C:\Users\Asus\Desktop\cable_tester\test2\Debug\List\test2.asm(1170): warning: .cseg .db misalignment - padding zero byte
0000b6 0001      	.DB  0x1
                 _0x2020000:
0000b7 4e2d
0000b8 4e41
0000b9 4900
0000ba 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Asus\Desktop\cable_tester\test2\Debug\List\test2.asm(1173): warning: .cseg .db misalignment - padding zero byte
0000bb 0000      	.DB  0x0
                 _0x2060003:
0000bc c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
0000bd 0002      	.DW  0x02
0000be 0245      	.DW  _profile_lcd_menu
0000bf 0066      	.DW  _0x3*2
                 
0000c0 0002      	.DW  0x02
0000c1 0247      	.DW  _Port_Set
0000c2 0068      	.DW  _0x4*2
                 
0000c3 0002      	.DW  0x02
0000c4 0249      	.DW  _Read_Pin
0000c5 006a      	.DW  _0x5*2
                 
0000c6 003f      	.DW  0x3F
0000c7 0255      	.DW  _Menue_Main_Srting
0000c8 006e      	.DW  _0x20003*2
                 
0000c9 0001      	.DW  0x01
0000ca 02a5      	.DW  __seed_G101
0000cb 016c      	.DW  _0x2020060*2
                 
0000cc 0002      	.DW  0x02
0000cd 02a9      	.DW  __base_y_G103
0000ce 0178      	.DW  _0x2060003*2
                 
                 _0xFFFFFFFF:
0000cf 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0000d0 94f8      	CLI
0000d1 27ee      	CLR  R30
0000d2 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000d3 e0f1      	LDI  R31,1
0000d4 bffb      	OUT  GICR,R31
0000d5 bfeb      	OUT  GICR,R30
0000d6 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0000d7 e08d      	LDI  R24,(14-2)+1
0000d8 e0a2      	LDI  R26,2
0000d9 27bb      	CLR  R27
                 __CLEAR_REG:
0000da 93ed      	ST   X+,R30
0000db 958a      	DEC  R24
0000dc f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000dd e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000de e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000df e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0000e0 93ed      	ST   X+,R30
0000e1 9701      	SBIW R24,1
0000e2 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000e3 e7ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000e4 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000e5 9185      	LPM  R24,Z+
0000e6 9195      	LPM  R25,Z+
0000e7 9700      	SBIW R24,0
0000e8 f061      	BREQ __GLOBAL_INI_END
0000e9 91a5      	LPM  R26,Z+
0000ea 91b5      	LPM  R27,Z+
0000eb 9005      	LPM  R0,Z+
0000ec 9015      	LPM  R1,Z+
0000ed 01bf      	MOVW R22,R30
0000ee 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000ef 9005      	LPM  R0,Z+
0000f0 920d      	ST   X+,R0
0000f1 9701      	SBIW R24,1
0000f2 f7e1      	BRNE __GLOBAL_INI_LOOP
0000f3 01fb      	MOVW R30,R22
0000f4 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000f5 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000f6 bfed      	OUT  SPL,R30
0000f7 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000f8 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000f9 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000fa e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000fb 940c 015c 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include "cable.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <mega16a.h>
                 ;#include "Menu_Functions.h"
                 ;#include "button_function.h"
                 ;#include <delay.h>
                 ;
                 ;
                 ;
                 ;//Declare your global variables here
                 ;void write_port(uint8_t);
                 ;void Delay(uint32_t);
                 ;void Cable_Check(void);
                 ;uint8_t __read_PIN__(void);
                 ; int8_t (*profile_lcd_menu)() = &Menu_Cable_Select;
                 
                 	.DSEG
                 ; void (*Port_Set)(uint8_t ) = write_port;
                 ; uint8_t (*Read_Pin)() = __read_PIN__;
                 ; void (*sleep_ms)(uint32_t) = Delay;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;interrupt [EXT_INT2] void ext_int2_isr(void)
                 ; 0000 001E {
                 
                 	.CSEG
                 _ext_int2_isr:
                 ; .FSTART _ext_int2_isr
0000fd 93ea      	ST   -Y,R30
0000fe b7ef      	IN   R30,SREG
0000ff 93ea      	ST   -Y,R30
                 ; 0000 001F 
                 ; 0000 0020   if(PINB.3==0)
000100 99b3      	SBIC 0x16,3
000101 c005      	RJMP _0x7
                 ; 0000 0021   {
                 ; 0000 0022     flags_b.enter=1;
000102 91e0 0254 	LDS  R30,_flags_b
000104 60e1      	ORI  R30,1
000105 93e0 0254 	STS  _flags_b,R30
                 ; 0000 0023   }
                 ; 0000 0024 
                 ; 0000 0025   if(PINB.5==0)
                 _0x7:
000107 99b5      	SBIC 0x16,5
000108 c005      	RJMP _0x8
                 ; 0000 0026   {
                 ; 0000 0027     flags_b.up=1;
000109 91e0 0254 	LDS  R30,_flags_b
00010b 60e2      	ORI  R30,2
00010c 93e0 0254 	STS  _flags_b,R30
                 ; 0000 0028   }
                 ; 0000 0029   if(PINB.4==0)
                 _0x8:
00010e 99b4      	SBIC 0x16,4
00010f c005      	RJMP _0x9
                 ; 0000 002A   {
                 ; 0000 002B     flags_b.down=1;
000110 91e0 0254 	LDS  R30,_flags_b
000112 60e4      	ORI  R30,4
000113 93e0 0254 	STS  _flags_b,R30
                 ; 0000 002C   }
                 ; 0000 002D 
                 ; 0000 002E }
                 _0x9:
000115 91e9      	LD   R30,Y+
000116 bfef      	OUT  SREG,R30
000117 91e9      	LD   R30,Y+
000118 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;
                 ;// Timer 0 overflow interrupt service routine
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0034 {
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
000119 920a      	ST   -Y,R0
00011a 921a      	ST   -Y,R1
00011b 92fa      	ST   -Y,R15
00011c 936a      	ST   -Y,R22
00011d 937a      	ST   -Y,R23
00011e 938a      	ST   -Y,R24
00011f 939a      	ST   -Y,R25
000120 93aa      	ST   -Y,R26
000121 93ba      	ST   -Y,R27
000122 93ea      	ST   -Y,R30
000123 93fa      	ST   -Y,R31
000124 b7ef      	IN   R30,SREG
000125 93ea      	ST   -Y,R30
                 ; 0000 0035 // Reinitialize Timer 0 value
                 ; 0000 0036 TCNT0=0x64;
000126 e6e4      	LDI  R30,LOW(100)
000127 bfe2      	OUT  0x32,R30
                 ; 0000 0037 // Place your code here
                 ; 0000 0038 switch (page)
000128 91e0 0253 	LDS  R30,_page
00012a e0f0      	LDI  R31,0
                 ; 0000 0039 {
                 ; 0000 003A     case MAIN_PAGE:
00012b 30e4      	CPI  R30,LOW(0x4)
00012c e0a0      	LDI  R26,HIGH(0x4)
00012d 07fa      	CPC  R31,R26
00012e f421      	BRNE _0xD
                 ; 0000 003B         Menu_Main();
00012f d08d      	RCALL _Menu_Main
                 ; 0000 003C         main_menu_button_manager_func();
000130 940e 0379 	CALL _main_menu_button_manager_func
                 ; 0000 003D         break;
000132 c01b      	RJMP _0xC
                 ; 0000 003E     case RUN_TEST_PAGE:
                 _0xD:
000133 9730      	SBIW R30,0
000134 f411      	BRNE _0xE
                 ; 0000 003F         Menu_Run_Test();
000135 d0db      	RCALL _Menu_Run_Test
                 ; 0000 0040         //run_test_button_manager_func();
                 ; 0000 0041         break;
000136 c017      	RJMP _0xC
                 ; 0000 0042     case CABLE_SELSECT_PAGE:
                 _0xE:
000137 30e1      	CPI  R30,LOW(0x1)
000138 e0a0      	LDI  R26,HIGH(0x1)
000139 07fa      	CPC  R31,R26
00013a f421      	BRNE _0xF
                 ; 0000 0043         Menu_Cable_Select();
00013b d0aa      	RCALL _Menu_Cable_Select
                 ; 0000 0044         cable_select_button_manager_func();
00013c 940e 03ec 	CALL _cable_select_button_manager_func
                 ; 0000 0045         break;
00013e c00f      	RJMP _0xC
                 ; 0000 0046      case CABLE_DEFINE_PAGE:
                 _0xF:
00013f 30e2      	CPI  R30,LOW(0x2)
000140 e0a0      	LDI  R26,HIGH(0x2)
000141 07fa      	CPC  R31,R26
000142 f421      	BRNE _0x10
                 ; 0000 0047         Menu_Cable_Define();
000143 d100      	RCALL _Menu_Cable_Define
                 ; 0000 0048         cable_define_button_manager_func();
000144 940e 0434 	CALL _cable_define_button_manager_func
                 ; 0000 0049         break;
000146 c007      	RJMP _0xC
                 ; 0000 004A     case ABOUT_ME_PAGE:
                 _0x10:
000147 30e3      	CPI  R30,LOW(0x3)
000148 e0a0      	LDI  R26,HIGH(0x3)
000149 07fa      	CPC  R31,R26
00014a f419      	BRNE _0xC
                 ; 0000 004B         Menu_About_Me();
00014b d163      	RCALL _Menu_About_Me
                 ; 0000 004C         about_me_button_manager_func();
00014c 940e 04af 	CALL _about_me_button_manager_func
                 ; 0000 004D         break;
                 ; 0000 004E }
                 _0xC:
                 ; 0000 004F 
                 ; 0000 0050 }
00014e 91e9      	LD   R30,Y+
00014f bfef      	OUT  SREG,R30
000150 91f9      	LD   R31,Y+
000151 91e9      	LD   R30,Y+
000152 91b9      	LD   R27,Y+
000153 91a9      	LD   R26,Y+
000154 9199      	LD   R25,Y+
000155 9189      	LD   R24,Y+
000156 9179      	LD   R23,Y+
000157 9169      	LD   R22,Y+
000158 90f9      	LD   R15,Y+
000159 9019      	LD   R1,Y+
00015a 9009      	LD   R0,Y+
00015b 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0054 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0055 // Declare your local variables here
                 ; 0000 0056 
                 ; 0000 0057 
                 ; 0000 0058 In_profile[0][0] = 0x01;
00015c e0e1      	LDI  R30,LOW(1)
00015d 93e0 0160 	STS  _In_profile,R30
                 ; 0000 0059 In_profile[0][1] = 0x02;
00015f e0e2      	LDI  R30,LOW(2)
                +
000160 93e0 0161+STS _In_profile + ( 1 ) , R30
                 	__PUTB1MN _In_profile,1
                 ; 0000 005A In_profile[0][2] = 0x04;
000162 e0e4      	LDI  R30,LOW(4)
                +
000163 93e0 0162+STS _In_profile + ( 2 ) , R30
                 	__PUTB1MN _In_profile,2
                 ; 0000 005B In_profile[0][3] = 0x08;
000165 e0e8      	LDI  R30,LOW(8)
                +
000166 93e0 0163+STS _In_profile + ( 3 ) , R30
                 	__PUTB1MN _In_profile,3
                 ; 0000 005C In_profile[0][4] = 0x10;
000168 e1e0      	LDI  R30,LOW(16)
                +
000169 93e0 0164+STS _In_profile + ( 4 ) , R30
                 	__PUTB1MN _In_profile,4
                 ; 0000 005D In_profile[0][5] = 0x20;
00016b e2e0      	LDI  R30,LOW(32)
                +
00016c 93e0 0165+STS _In_profile + ( 5 ) , R30
                 	__PUTB1MN _In_profile,5
                 ; 0000 005E In_profile[0][6] = 0x40;
00016e e4e0      	LDI  R30,LOW(64)
                +
00016f 93e0 0166+STS _In_profile + ( 6 ) , R30
                 	__PUTB1MN _In_profile,6
                 ; 0000 005F In_profile[0][7] = 0x80;
000171 e8e0      	LDI  R30,LOW(128)
                +
000172 93e0 0167+STS _In_profile + ( 7 ) , R30
                 	__PUTB1MN _In_profile,7
                 ; 0000 0060 
                 ; 0000 0061 Out_profile[0][0] = 0x01;
000174 e0e1      	LDI  R30,LOW(1)
000175 93e0 01c0 	STS  _Out_profile,R30
                 ; 0000 0062 Out_profile[0][1] = 0x02;
000177 e0e2      	LDI  R30,LOW(2)
                +
000178 93e0 01c1+STS _Out_profile + ( 1 ) , R30
                 	__PUTB1MN _Out_profile,1
                 ; 0000 0063 Out_profile[0][2] = 0x04;
00017a e0e4      	LDI  R30,LOW(4)
                +
00017b 93e0 01c2+STS _Out_profile + ( 2 ) , R30
                 	__PUTB1MN _Out_profile,2
                 ; 0000 0064 Out_profile[0][3] = 0x08;
00017d e0e8      	LDI  R30,LOW(8)
                +
00017e 93e0 01c3+STS _Out_profile + ( 3 ) , R30
                 	__PUTB1MN _Out_profile,3
                 ; 0000 0065 Out_profile[0][4] = 0x10;
000180 e1e0      	LDI  R30,LOW(16)
                +
000181 93e0 01c4+STS _Out_profile + ( 4 ) , R30
                 	__PUTB1MN _Out_profile,4
                 ; 0000 0066 Out_profile[0][5] = 0x20;
000183 e2e0      	LDI  R30,LOW(32)
                +
000184 93e0 01c5+STS _Out_profile + ( 5 ) , R30
                 	__PUTB1MN _Out_profile,5
                 ; 0000 0067 Out_profile[0][6] = 0x40;
000186 e4e0      	LDI  R30,LOW(64)
                +
000187 93e0 01c6+STS _Out_profile + ( 6 ) , R30
                 	__PUTB1MN _Out_profile,6
                 ; 0000 0068 Out_profile[0][7] = 0x80;
000189 e8e0      	LDI  R30,LOW(128)
                +
00018a 93e0 01c7+STS _Out_profile + ( 7 ) , R30
                 	__PUTB1MN _Out_profile,7
                 ; 0000 0069 
                 ; 0000 006A 
                 ; 0000 006B 
                 ; 0000 006C 
                 ; 0000 006D 
                 ; 0000 006E //Out_profile[1] = {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
                 ; 0000 006F // Input/Output Ports initialization
                 ; 0000 0070 // Port A initialization
                 ; 0000 0071 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0072 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
00018c e0e0      	LDI  R30,LOW(0)
00018d bbea      	OUT  0x1A,R30
                 ; 0000 0073 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0074 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
00018e bbeb      	OUT  0x1B,R30
                 ; 0000 0075 
                 ; 0000 0076 // Port B initialization
                 ; 0000 0077 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0078 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
00018f bbe7      	OUT  0x17,R30
                 ; 0000 0079 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 007A PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000190 bbe8      	OUT  0x18,R30
                 ; 0000 007B 
                 ; 0000 007C // Port C initialization
                 ; 0000 007D // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 007E DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
000191 efef      	LDI  R30,LOW(255)
000192 bbe4      	OUT  0x14,R30
                 ; 0000 007F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0080 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000193 e0e0      	LDI  R30,LOW(0)
000194 bbe5      	OUT  0x15,R30
                 ; 0000 0081 
                 ; 0000 0082 // Port D initialization
                 ; 0000 0083 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0084 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000195 bbe1      	OUT  0x11,R30
                 ; 0000 0085 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0086 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000196 bbe2      	OUT  0x12,R30
                 ; 0000 0087  // External Interrupt(s) initialization
                 ; 0000 0088 // INT0: Off
                 ; 0000 0089 // INT1: Off
                 ; 0000 008A // INT2: On
                 ; 0000 008B // INT2 Mode: Falling Edge
                 ; 0000 008C GICR|=(0<<INT1) | (0<<INT0) | (1<<INT2);
000197 b7eb      	IN   R30,0x3B
000198 62e0      	ORI  R30,0x20
000199 bfeb      	OUT  0x3B,R30
                 ; 0000 008D MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
00019a e0e0      	LDI  R30,LOW(0)
00019b bfe5      	OUT  0x35,R30
                 ; 0000 008E MCUCSR=(0<<ISC2);
00019c bfe4      	OUT  0x34,R30
                 ; 0000 008F GIFR=(0<<INTF1) | (0<<INTF0) | (1<<INTF2);
00019d e2e0      	LDI  R30,LOW(32)
00019e bfea      	OUT  0x3A,R30
                 ; 0000 0090 
                 ; 0000 0091 
                 ; 0000 0092 
                 ; 0000 0093 // Timer/Counter 0 initialization
                 ; 0000 0094 // Clock source: System Clock
                 ; 0000 0095 // Clock value: 31.250 kHz
                 ; 0000 0096 // Mode: Normal top=0xFF
                 ; 0000 0097 // OC0 output: Disconnected
                 ; 0000 0098 // Timer Period: 4.992 ms
                 ; 0000 0099 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (1<<CS02) | (0<<CS01) | (0<<CS00);
00019f e0e4      	LDI  R30,LOW(4)
0001a0 bfe3      	OUT  0x33,R30
                 ; 0000 009A TCNT0=0x64;
0001a1 e6e4      	LDI  R30,LOW(100)
0001a2 bfe2      	OUT  0x32,R30
                 ; 0000 009B OCR0=0x00;
0001a3 e0e0      	LDI  R30,LOW(0)
0001a4 bfec      	OUT  0x3C,R30
                 ; 0000 009C 
                 ; 0000 009D 
                 ; 0000 009E // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 009F TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
0001a5 e0e1      	LDI  R30,LOW(1)
0001a6 bfe9      	OUT  0x39,R30
                 ; 0000 00A0 DDRB.0=1;
0001a7 9ab8      	SBI  0x17,0
                 ; 0000 00A1 lcd_init(16);
0001a8 e1a0      	LDI  R26,LOW(16)
0001a9 940e 0740 	CALL _lcd_init
                 ; 0000 00A2 // Global enable interrupts
                 ; 0000 00A3 #asm("sei")
0001ab 9478      	sei
                 ; 0000 00A4 while (1)
                 _0x14:
                 ; 0000 00A5 {
                 ; 0000 00A6 
                 ; 0000 00A7 }
0001ac cfff      	RJMP _0x14
                 ; 0000 00A8 }
                 _0x17:
0001ad cfff      	RJMP _0x17
                 ; .FEND
                 ;
                 ;void write_port(uint8_t In_value){
                 ; 0000 00AA void write_port(uint8_t In_value){
                 _write_port:
                 ; .FSTART _write_port
                 ; 0000 00AB 
                 ; 0000 00AC 
                 ; 0000 00AD PORTC = In_value;
0001ae 93aa      	ST   -Y,R26
                 ;	In_value -> Y+0
0001af 81e8      	LD   R30,Y
0001b0 bbe5      	OUT  0x15,R30
                 ; 0000 00AE 
                 ; 0000 00AF }
0001b1 9621      	ADIW R28,1
0001b2 9508      	RET
                 ; .FEND
                 ;
                 ;void Delay(uint32_t T){
                 ; 0000 00B1 void Delay(uint32_t T){
                 _Delay:
                 ; .FSTART _Delay
                 ; 0000 00B2 
                 ; 0000 00B3 delay_ms(T);
0001b3 940e 08e0 	CALL __PUTPARD2
                 ;	T -> Y+0
0001b5 81a8      	LD   R26,Y
0001b6 81b9      	LDD  R27,Y+1
0001b7 940e 08ad 	CALL _delay_ms
                 ; 0000 00B4 
                 ; 0000 00B5 }
0001b9 9624      	ADIW R28,4
0001ba 9508      	RET
                 ; .FEND
                 ;
                 ;uint8_t __read_PIN__(void){
                 ; 0000 00B7 uint8_t __read_PIN__(void){
                 ___read_PIN__:
                 ; .FSTART ___read_PIN__
                 ; 0000 00B8 
                 ; 0000 00B9 return PIND;
0001bb b3e0      	IN   R30,0x10
0001bc 9508      	RET
                 ; 0000 00BA 
                 ; 0000 00BB }
                 ; .FEND
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;#include "Menu_Functions.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "cable.h"
                 ;char Menue_Main_Srting[4][16]={"Test Run      " , "Cable Select   " , "Cable define   " , "About Me       "};
                 
                 	.DSEG
                 ;char lcd_buffer[16];
                 ;int8_t Menue_Main_Num=0;
                 ;int8_t Menue_Cable_Select_Num=0;
                 ;uint8_t Menu_Cable_Define_Prof=0;
                 ;uint8_t Menu_Cable_Define_Index_In=0;
                 ;uint8_t Menu_Cable_Define_Index_Out=0;
                 ;uint8_t Menu_Cable_Define_Index_In_Num=0;
                 ;uint8_t Menu_Cable_Define_Index_Out_Num=0;
                 ;struct FLAGS_MENU flags_menu;
                 ;uint8_t page=RUN_TEST_PAGE;
                 ;int8_t Menu_Main (void)
                 ; 0001 000F {
                 
                 	.CSEG
                 _Menu_Main:
                 ; .FSTART _Menu_Main
                 ; 0001 0010 	lcd_gotoxy(0,0);
0001bd 940e 076e 	CALL SUBOPT_0x0
                 ; 0001 0011 	memset(lcd_buffer,0,sizeof(lcd_buffer));
0001bf 940e 0778 	CALL SUBOPT_0x1
                 ; 0001 0012 	snprintf(lcd_buffer, sizeof(lcd_buffer), "->%s", Menue_Main_Srting[Menue_Main_Num]);
                +
0001c1 eaee     +LDI R30 , LOW ( 2 * _0x20000 + ( 0 ) )
0001c2 e0f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 0 ) )
                 	__POINTW1FN _0x20000,0
0001c3 93fa      	ST   -Y,R31
0001c4 93ea      	ST   -Y,R30
0001c5 91e0 024b 	LDS  R30,_Menue_Main_Num
0001c7 e0f0      	LDI  R31,0
0001c8 940e 0787 	CALL SUBOPT_0x2
                 ; 0001 0013 	//sprintf(lcd_buffer,"->%d",Menue_Main_Num);
                 ; 0001 0014 	lcd_puts(lcd_buffer);
                 ; 0001 0015 	lcd_gotoxy(0,1);
0001ca 940e 0797 	CALL SUBOPT_0x3
                 ; 0001 0016 	memset(lcd_buffer,0,sizeof(lcd_buffer));
0001cc 940e 0778 	CALL SUBOPT_0x1
                 ; 0001 0017 	snprintf(lcd_buffer, sizeof(lcd_buffer), "%s", Menue_Main_Srting[Menue_Main_Num+1]);
                +
0001ce ebe0     +LDI R30 , LOW ( 2 * _0x20000 + ( 2 ) )
0001cf e0f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 2 ) )
                 	__POINTW1FN _0x20000,2
0001d0 93fa      	ST   -Y,R31
0001d1 93ea      	ST   -Y,R30
0001d2 91e0 024b 	LDS  R30,_Menue_Main_Num
0001d4 e0f0      	LDI  R31,0
0001d5 fde7      	SBRC R30,7
0001d6 efff      	SER  R31
0001d7 9631      	ADIW R30,1
0001d8 940e 0787 	CALL SUBOPT_0x2
                 ; 0001 0018 	//sprintf(lcd_buffer,"%d",Menue_Main_Num+1);
                 ; 0001 0019 	lcd_puts(lcd_buffer);
                 ; 0001 001A 	memset(lcd_buffer,0,sizeof(lcd_buffer));
0001da 940e 07a1 	CALL SUBOPT_0x4
                 ; 0001 001B 	if(flag.enter_button==1)
0001dc f441      	BRNE _0x20004
                 ; 0001 001C 	{
                 ; 0001 001D 		flag.enter_button=0;
0001dd 91e0 0233 	LDS  R30,_flag
0001df 7fe7      	ANDI R30,0XF7
0001e0 93e0 0233 	STS  _flag,R30
                 ; 0001 001E 		return Menue_Main_Num;
0001e2 91e0 024b 	LDS  R30,_Menue_Main_Num
0001e4 9508      	RET
                 ; 0001 001F 	}
                 ; 0001 0020 	return -1;
                 _0x20004:
0001e5 c029      	RJMP _0x20C0008
                 ; 0001 0021 }
                 ; .FEND
                 ;
                 ;int8_t  Menu_Cable_Select(void)
                 ; 0001 0024 {
                 _Menu_Cable_Select:
                 ; .FSTART _Menu_Cable_Select
                 ; 0001 0025 	lcd_gotoxy(0,0);
0001e6 940e 076e 	CALL SUBOPT_0x0
                 ; 0001 0026 	sprintf(lcd_buffer,"-> cable%02d     ",Menue_Cable_Select_Num);
                +
0001e8 ebe3     +LDI R30 , LOW ( 2 * _0x20000 + ( 5 ) )
0001e9 e0f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 5 ) )
                 	__POINTW1FN _0x20000,5
0001ea 93fa      	ST   -Y,R31
0001eb 93ea      	ST   -Y,R30
0001ec 91e0 024c 	LDS  R30,_Menue_Cable_Select_Num
0001ee 940e 08c8 	CALL __CBD1
0001f0 940e 07b0 	CALL SUBOPT_0x5
                 ; 0001 0027 	lcd_puts(lcd_buffer);
                 ; 0001 0028 	lcd_gotoxy(0,1);
0001f2 940e 0797 	CALL SUBOPT_0x3
                 ; 0001 0029 	sprintf(lcd_buffer,"   cable%02d    ",Menue_Cable_Select_Num+1);
                +
0001f4 ece5     +LDI R30 , LOW ( 2 * _0x20000 + ( 23 ) )
0001f5 e0f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 23 ) )
                 	__POINTW1FN _0x20000,23
0001f6 93fa      	ST   -Y,R31
0001f7 93ea      	ST   -Y,R30
0001f8 91e0 024c 	LDS  R30,_Menue_Cable_Select_Num
0001fa e0f0      	LDI  R31,0
0001fb fde7      	SBRC R30,7
0001fc efff      	SER  R31
0001fd 9631      	ADIW R30,1
0001fe 940e 08ce 	CALL __CWD1
000200 940e 07b0 	CALL SUBOPT_0x5
                 ; 0001 002A 	lcd_puts(lcd_buffer);
                 ; 0001 002B 	memset(lcd_buffer,0,sizeof(lcd_buffer));
000202 940e 07a1 	CALL SUBOPT_0x4
                 ; 0001 002C 	if(flag.enter_button==1)
000204 f451      	BRNE _0x20005
                 ; 0001 002D 	{
                 ; 0001 002E 		flag.enter_button=0;
000205 91e0 0233 	LDS  R30,_flag
000207 7fe7      	ANDI R30,0XF7
000208 93e0 0233 	STS  _flag,R30
                 ; 0001 002F 		cable_func_handle.cable_id=Menue_Cable_Select_Num;
00020a 91e0 024c 	LDS  R30,_Menue_Cable_Select_Num
                +
00020c 93e0 0231+STS _cable_func_handle + ( 17 ) , R30
                 	__PUTB1MN _cable_func_handle,17
                 ; 0001 0030 		return Menue_Cable_Select_Num;
00020e 9508      	RET
                 ; 0001 0031 	}
                 ; 0001 0032 	return -1;
                 _0x20005:
                 _0x20C0008:
00020f efef      	LDI  R30,LOW(255)
000210 9508      	RET
                 ; 0001 0033 }
                 ; .FEND
                 ;
                 ;int8_t Menu_Run_Test(void)
                 ; 0001 0036 {
                 _Menu_Run_Test:
                 ; .FSTART _Menu_Run_Test
                 ; 0001 0037 	//Profile_ID();
                 ; 0001 0038 	if( cable_func_handle.error_other==MAXPROFILELIMIT)
                +
000211 91a0 0228+LDS R26 , _cable_func_handle + ( 8 )
                 	__GETB2MN _cable_func_handle,8
000213 30a9      	CPI  R26,LOW(0x9)
000214 f161      	BREQ _0x20C0007
                 ; 0001 0039 	{
                 ; 0001 003A 		//print the error in here!
                 ; 0001 003B 		return 0;
                 ; 0001 003C 	}
                 ; 0001 003D 	else
                 ; 0001 003E 	{
                 ; 0001 003F 	Cable_Check();
000215 d0b4      	RCALL _Cable_Check
                 ; 0001 0040 	Cable_Error_Check();
000216 d118      	RCALL _Cable_Error_Check
                 ; 0001 0041 	lcd_gotoxy(0,0);
000217 940e 076e 	CALL SUBOPT_0x0
                 ; 0001 0042 	memset(lcd_buffer,' ',sizeof(lcd_buffer));
000219 940e 07ba 	CALL SUBOPT_0x6
                 ; 0001 0043 	sprintf(lcd_buffer,"--> %s",cable_func_handle.error_symbol);
                +
00021b ede6     +LDI R30 , LOW ( 2 * _0x20000 + ( 40 ) )
00021c e0f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 40 ) )
                 	__POINTW1FN _0x20000,40
00021d 93fa      	ST   -Y,R31
00021e 93ea      	ST   -Y,R30
                +
00021f e2e9     +LDI R30 , LOW ( _cable_func_handle + ( 9 ) )
000220 e0f2     +LDI R31 , HIGH ( _cable_func_handle + ( 9 ) )
                 	__POINTW1MN _cable_func_handle,9
000221 2766      	CLR  R22
000222 2777      	CLR  R23
000223 940e 07b0 	CALL SUBOPT_0x5
                 ; 0001 0044 	lcd_puts(lcd_buffer);
                 ; 0001 0045 	if(cable_func_handle.pass_pins==MAX_CABLE_PINS)
                +
000225 91a0 0232+LDS R26 , _cable_func_handle + ( 18 )
                 	__GETB2MN _cable_func_handle,18
000227 30a8      	CPI  R26,LOW(0x8)
000228 f439      	BRNE _0x20008
                 ; 0001 0046 	{
                 ; 0001 0047 		lcd_gotoxy(0,1);
000229 940e 0797 	CALL SUBOPT_0x3
                 ; 0001 0048 		memset(lcd_buffer,' ',sizeof(lcd_buffer));
00022b 940e 07ba 	CALL SUBOPT_0x6
                 ; 0001 0049 		sprintf(lcd_buffer,"     PASS!     ");
                +
00022d eded     +LDI R30 , LOW ( 2 * _0x20000 + ( 47 ) )
00022e e0f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 47 ) )
                 	__POINTW1FN _0x20000,47
00022f c006      	RJMP _0x20012
                 ; 0001 004A 		lcd_puts(lcd_buffer);
                 ; 0001 004B 		cable_func_handle.pass_pins=0;
                 ; 0001 004C 	}
                 ; 0001 004D 	else
                 _0x20008:
                 ; 0001 004E 	{
                 ; 0001 004F 		lcd_gotoxy(0,1);
000230 940e 0797 	CALL SUBOPT_0x3
                 ; 0001 0050 		memset(lcd_buffer,' ',sizeof(lcd_buffer));
000232 940e 07ba 	CALL SUBOPT_0x6
                 ; 0001 0051 		sprintf(lcd_buffer,"    Failed!    ");
                +
000234 eeed     +LDI R30 , LOW ( 2 * _0x20000 + ( 63 ) )
000235 e0f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 63 ) )
                 	__POINTW1FN _0x20000,63
                 _0x20012:
000236 93fa      	ST   -Y,R31
000237 93ea      	ST   -Y,R30
000238 940e 07c5 	CALL SUBOPT_0x7
                 ; 0001 0052 		lcd_puts(lcd_buffer);
00023a e9a5      	LDI  R26,LOW(_lcd_buffer)
00023b e0b2      	LDI  R27,HIGH(_lcd_buffer)
00023c 940e 072f 	CALL _lcd_puts
                 ; 0001 0053 		cable_func_handle.pass_pins=0;
00023e e0e0      	LDI  R30,LOW(0)
                +
00023f 93e0 0232+STS _cable_func_handle + ( 18 ) , R30
                 	__PUTB1MN _cable_func_handle,18
                 ; 0001 0054 	}
                 ; 0001 0055 	return 0;
                 _0x20C0007:
000241 e0e0      	LDI  R30,LOW(0)
000242 9508      	RET
                 ; 0001 0056 	}
                 ; 0001 0057 }
000243 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;
                 ;
                 ;void Menu_Cable_Define(void)
                 ; 0001 005D {
                 _Menu_Cable_Define:
                 ; .FSTART _Menu_Cable_Define
                 ; 0001 005E 	lcd_gotoxy(0,0);
000244 e0e0      	LDI  R30,LOW(0)
000245 93ea      	ST   -Y,R30
000246 e0a0      	LDI  R26,LOW(0)
000247 940e 0701 	CALL _lcd_gotoxy
                 ; 0001 005F 	In_profile[Menu_Cable_Define_Prof][Menu_Cable_Define_Index_In]=Menu_Cable_Define_Index_In_Num;
000249 940e 07ca 	CALL SUBOPT_0x8
00024b 940e 07d0 	CALL SUBOPT_0x9
00024d 0fea      	ADD  R30,R26
00024e 1ffb      	ADC  R31,R27
00024f 91a0 0250 	LDS  R26,_Menu_Cable_Define_Index_In_Num
000251 83a0      	STD  Z+0,R26
                 ; 0001 0060 	Out_profile[Menu_Cable_Define_Prof][Menu_Cable_Define_Index_Out]=Menu_Cable_Define_Index_Out_Num;
000252 940e 07ca 	CALL SUBOPT_0x8
000254 940e 07d7 	CALL SUBOPT_0xA
000256 0fea      	ADD  R30,R26
000257 1ffb      	ADC  R31,R27
000258 91a0 0251 	LDS  R26,_Menu_Cable_Define_Index_Out_Num
00025a 83a0      	STD  Z+0,R26
                 ; 0001 0061 	sprintf(lcd_buffer,"%02d->%02d   Prof=%02d",In_profile[Menu_Cable_Define_Prof][Menu_Cable_Define_Index_In],Out_profile[ ...
00025b 940e 07de 	CALL SUBOPT_0xB
                +
00025d efed     +LDI R30 , LOW ( 2 * _0x20000 + ( 79 ) )
00025e e0f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 79 ) )
                 	__POINTW1FN _0x20000,79
00025f 93fa      	ST   -Y,R31
000260 93ea      	ST   -Y,R30
000261 940e 07ca 	CALL SUBOPT_0x8
000263 940e 07d0 	CALL SUBOPT_0x9
000265 940e 07e3 	CALL SUBOPT_0xC
000267 940e 07ca 	CALL SUBOPT_0x8
000269 940e 07d7 	CALL SUBOPT_0xA
00026b 940e 07e3 	CALL SUBOPT_0xC
00026d 91e0 024d 	LDS  R30,_Menu_Cable_Define_Prof
00026f 27ff      	CLR  R31
000270 2766      	CLR  R22
000271 2777      	CLR  R23
000272 940e 08db 	CALL __PUTPARD1
000274 e08c      	LDI  R24,12
000275 940e 0664 	CALL _sprintf
000277 9660      	ADIW R28,16
                 ; 0001 0062 	lcd_puts(lcd_buffer);
000278 e9a5      	LDI  R26,LOW(_lcd_buffer)
000279 e0b2      	LDI  R27,HIGH(_lcd_buffer)
00027a 940e 072f 	CALL _lcd_puts
                 ; 0001 0063 	memset(lcd_buffer,0,sizeof(lcd_buffer));
00027c 940e 07de 	CALL SUBOPT_0xB
00027e 940e 07ec 	CALL SUBOPT_0xD
                 ; 0001 0064 	lcd_gotoxy(0,1);
000280 e0e0      	LDI  R30,LOW(0)
000281 93ea      	ST   -Y,R30
000282 e0a1      	LDI  R26,LOW(1)
000283 940e 0701 	CALL _lcd_gotoxy
                 ; 0001 0065 	switch (flags_menu.subpage)
000285 91e0 0252 	LDS  R30,_flags_menu
000287 e0f0      	LDI  R31,0
000288 70e7      	ANDI R30,LOW(0x7)
000289 70f0      	ANDI R31,HIGH(0x7)
00028a ffe2      	SBRS R30,2
00028b c002      	RJMP _0x2000D
00028c 6fe8      	ORI  R30,LOW(0xFFF8)
00028d 6fff      	ORI  R31,HIGH(0xFFF8)
                 _0x2000D:
                 ; 0001 0066 	{
                 ; 0001 0067 	case IN_SELECT:
00028e 30e2      	CPI  R30,LOW(0x2)
00028f e0a0      	LDI  R26,HIGH(0x2)
000290 07fa      	CPC  R31,R26
000291 f439      	BRNE _0x2000E
                 ; 0001 0068 		sprintf(lcd_buffer," ^               ");
000292 940e 07de 	CALL SUBOPT_0xB
                +
000294 e1e4     +LDI R30 , LOW ( 2 * _0x20000 + ( 102 ) )
000295 e0f1     +LDI R31 , HIGH ( 2 * _0x20000 + ( 102 ) )
                 	__POINTW1FN _0x20000,102
000296 940e 07f2 	CALL SUBOPT_0xE
                 ; 0001 0069 		break;
000298 c015      	RJMP _0x2000C
                 ; 0001 006A 	case OUT_SELECT:
                 _0x2000E:
000299 30e3      	CPI  R30,LOW(0x3)
00029a e0a0      	LDI  R26,HIGH(0x3)
00029b 07fa      	CPC  R31,R26
00029c f439      	BRNE _0x2000F
                 ; 0001 006B 		lcd_gotoxy(0,1);
00029d 940e 0797 	CALL SUBOPT_0x3
                 ; 0001 006C 		sprintf(lcd_buffer,"     ^           ");
                +
00029f e2e6     +LDI R30 , LOW ( 2 * _0x20000 + ( 120 ) )
0002a0 e0f1     +LDI R31 , HIGH ( 2 * _0x20000 + ( 120 ) )
                 	__POINTW1FN _0x20000,120
0002a1 940e 07f2 	CALL SUBOPT_0xE
                 ; 0001 006D 	    break;
0002a3 c00a      	RJMP _0x2000C
                 ; 0001 006E 	case PROF_SELECT:
                 _0x2000F:
0002a4 30e4      	CPI  R30,LOW(0x4)
0002a5 e0a0      	LDI  R26,HIGH(0x4)
0002a6 07fa      	CPC  R31,R26
0002a7 f431      	BRNE _0x20011
                 ; 0001 006F 		sprintf(lcd_buffer,"               ^");
0002a8 940e 07de 	CALL SUBOPT_0xB
                +
0002aa e3e8     +LDI R30 , LOW ( 2 * _0x20000 + ( 138 ) )
0002ab e0f1     +LDI R31 , HIGH ( 2 * _0x20000 + ( 138 ) )
                 	__POINTW1FN _0x20000,138
0002ac 940e 07f2 	CALL SUBOPT_0xE
                 ; 0001 0070 		break;
                 ; 0001 0071 	default:
                 _0x20011:
                 ; 0001 0072 		break;
                 ; 0001 0073 	}
                 _0x2000C:
                 ; 0001 0074 	lcd_puts(lcd_buffer);
0002ae c012      	RJMP _0x20C0006
                 ; 0001 0075 
                 ; 0001 0076 
                 ; 0001 0077 	memset(lcd_buffer,0,sizeof(lcd_buffer));
                 ; 0001 0078 }
                 ; .FEND
                 ;
                 ;void Menu_About_Me(void)
                 ; 0001 007B {
                 _Menu_About_Me:
                 ; .FSTART _Menu_About_Me
                 ; 0001 007C 	lcd_gotoxy(0,0);
0002af 940e 076e 	CALL SUBOPT_0x0
                 ; 0001 007D 	sprintf(lcd_buffer," Cable Test V%02d ",Version);
                +
0002b1 e4e9     +LDI R30 , LOW ( 2 * _0x20000 + ( 155 ) )
0002b2 e0f1     +LDI R31 , HIGH ( 2 * _0x20000 + ( 155 ) )
                 	__POINTW1FN _0x20000,155
0002b3 93fa      	ST   -Y,R31
0002b4 93ea      	ST   -Y,R30
                +
0002b5 e0e1     +LDI R30 , LOW ( 0x1 )
0002b6 e0f0     +LDI R31 , HIGH ( 0x1 )
0002b7 e060     +LDI R22 , BYTE3 ( 0x1 )
0002b8 e070     +LDI R23 , BYTE4 ( 0x1 )
                 	__GETD1N 0x1
0002b9 940e 07b0 	CALL SUBOPT_0x5
                 ; 0001 007E 	lcd_puts(lcd_buffer);
                 ; 0001 007F 	lcd_gotoxy(0,1);
0002bb 940e 0797 	CALL SUBOPT_0x3
                 ; 0001 0080 	sprintf(lcd_buffer,"      NSC      ");
                +
0002bd e5ec     +LDI R30 , LOW ( 2 * _0x20000 + ( 174 ) )
0002be e0f1     +LDI R31 , HIGH ( 2 * _0x20000 + ( 174 ) )
                 	__POINTW1FN _0x20000,174
0002bf 940e 07f2 	CALL SUBOPT_0xE
                 ; 0001 0081 	lcd_puts(lcd_buffer);
                 _0x20C0006:
0002c1 e9a5      	LDI  R26,LOW(_lcd_buffer)
0002c2 e0b2      	LDI  R27,HIGH(_lcd_buffer)
0002c3 940e 072f 	CALL _lcd_puts
                 ; 0001 0082 	memset(lcd_buffer,0,sizeof(lcd_buffer));
0002c5 940e 07de 	CALL SUBOPT_0xB
0002c7 940e 07ec 	CALL SUBOPT_0xD
                 ; 0001 0083 }
0002c9 9508      	RET
                 ; .FEND
                 ;
                 ;#include "cable.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;
                 ;uint8_t Input[MAX_CABLE_PINS];
                 ;uint8_t Output[MAX_CABLE_PINS];
                 ;
                 ;uint8_t In_profile[MAX_NUMBER_PROFILE][MAX_CABLE_PINS];
                 ;uint8_t Out_profile[MAX_NUMBER_PROFILE][MAX_CABLE_PINS];
                 ;struct FUNC_HANDLE cable_func_handle;
                 ;struct FLAG flag;
                 ;
                 ;
                 ;
                 ;/*
                 ;uint8_t (*Read_Pin)(void) = NULL;
                 ;void (*Port_Set)(uint8_t) = NULL;
                 ;void (*sleep_ms)(uint32_t) = NULL;
                 ;int8_t (*profile_lcd_menu)(void) = NULL;
                 ;*/
                 ;
                 ;struct FUNC_HANDLE Profile_ID(void)
                 ; 0002 0015 {
                 
                 	.CSEG
                 ; 0002 0016     uint8_t Cable_ID=0;
                 ; 0002 0017     Cable_ID=(*profile_lcd_menu)();
                 ;	Cable_ID -> R17
                 ; 0002 0018     if(Cable_ID>MAX_NUMBER_PROFILE)
                 ; 0002 0019     {
                 ; 0002 001A         cable_func_handle.error_other=MAXPROFILELIMIT;
                 ; 0002 001B         return cable_func_handle;
                 ; 0002 001C     }
                 ; 0002 001D     cable_func_handle.cable_id=Cable_ID;
                 ; 0002 001E     return cable_func_handle;
                 ; 0002 001F 
                 ; 0002 0020 }
                 ;
                 ;void Cable_Check(void)
                 ; 0002 0023 {
                 _Cable_Check:
                 ; .FSTART _Cable_Check
                 ; 0002 0024     uint8_t i=0,j=0;
                 ; 0002 0025     memcpy(Input,In_profile[cable_func_handle.cable_id],MAX_CABLE_PINS);
0002ca 931a      	ST   -Y,R17
0002cb 930a      	ST   -Y,R16
                 ;	i -> R17
                 ;	j -> R16
0002cc e010      	LDI  R17,0
0002cd e000      	LDI  R16,0
0002ce e3e5      	LDI  R30,LOW(_Input)
0002cf e0f2      	LDI  R31,HIGH(_Input)
0002d0 940e 07f5 	CALL SUBOPT_0xF
0002d2 5ae0      	SUBI R30,LOW(-_In_profile)
0002d3 4ffe      	SBCI R31,HIGH(-_In_profile)
0002d4 940e 07fd 	CALL SUBOPT_0x10
                 ; 0002 0026     memcpy(Output,Out_profile[cable_func_handle.cable_id],MAX_CABLE_PINS);
0002d6 e3ed      	LDI  R30,LOW(_Output)
0002d7 e0f2      	LDI  R31,HIGH(_Output)
0002d8 940e 07f5 	CALL SUBOPT_0xF
0002da 54e0      	SUBI R30,LOW(-_Out_profile)
0002db 4ffe      	SBCI R31,HIGH(-_Out_profile)
0002dc 940e 07fd 	CALL SUBOPT_0x10
                 ; 0002 0027     for(i=0;i<sizeof(Output);i++)
0002de e010      	LDI  R17,LOW(0)
                 _0x40005:
0002df 3018      	CPI  R17,8
0002e0 f008      	BRLO PC+2
0002e1 c04a      	RJMP _0x40006
                 ; 0002 0028     {
                 ; 0002 0029         (*Port_Set)(Output[i]);
0002e2 2fe1      	MOV  R30,R17
0002e3 e0f0      	LDI  R31,0
0002e4 5ce3      	SUBI R30,LOW(-_Output)
0002e5 4ffd      	SBCI R31,HIGH(-_Output)
0002e6 81a0      	LD   R26,Z
                +
0002e7 91e0 0247+LDS R30 , _Port_Set + ( 0 )
0002e9 91f0 0248+LDS R31 , _Port_Set + ( 0 ) + 1
0002eb 9509     +ICALL
                 	__CALL1MN _Port_Set,0
                 ; 0002 002A         for(j=0;j<sizeof(Input);j++)
0002ec e000      	LDI  R16,LOW(0)
                 _0x40008:
0002ed 3008      	CPI  R16,8
0002ee f528      	BRSH _0x40009
                 ; 0002 002B         {
                 ; 0002 002C             //(*sleep_ms)(1);
                 ; 0002 002D             if((*Read_Pin)()==Input[j])
0002ef 940e 0803 	CALL SUBOPT_0x11
0002f1 f4a1      	BRNE _0x4000A
                 ; 0002 002E             {
                 ; 0002 002F                 if(i!=j)
0002f2 1701      	CP   R16,R17
0002f3 f051      	BREQ _0x4000B
                 ; 0002 0030                 {
                 ; 0002 0031                     cable_func_handle.error_cable[i]=2+i;
0002f4 2fa1      	MOV  R26,R17
0002f5 e0b0      	LDI  R27,0
0002f6 5ea0      	SUBI R26,LOW(-_cable_func_handle)
0002f7 4fbd      	SBCI R27,HIGH(-_cable_func_handle)
0002f8 2fe1      	MOV  R30,R17
0002f9 5fee      	SUBI R30,-LOW(2)
0002fa 93ec      	ST   X,R30
                 ; 0002 0032                     flag.connect=1;
0002fb 940e 0810 	CALL SUBOPT_0x12
                 ; 0002 0033                 }
                 ; 0002 0034                 else if(i==j)
0002fd c008      	RJMP _0x4000C
                 _0x4000B:
0002fe 1701      	CP   R16,R17
0002ff f431      	BRNE _0x4000D
                 ; 0002 0035                 {
                 ; 0002 0036                     flag.connect=1;
000300 940e 0810 	CALL SUBOPT_0x12
                 ; 0002 0037                     cable_func_handle.error_cable[i]=0;
000302 940e 0816 	CALL SUBOPT_0x13
000304 e0a0      	LDI  R26,LOW(0)
000305 83a0      	STD  Z+0,R26
                 ; 0002 0038                 }
                 ; 0002 0039 
                 ; 0002 003A             }
                 _0x4000D:
                 _0x4000C:
                 ; 0002 003B             if((*Read_Pin)()>Input[j])
                 _0x4000A:
000306 940e 0803 	CALL SUBOPT_0x11
000308 f448      	BRSH _0x4000E
                 ; 0002 003C             {
                 ; 0002 003D                flag.connect=1;
000309 940e 0810 	CALL SUBOPT_0x12
                 ; 0002 003E                cable_func_handle.error_cable[i]=3+i;
00030b 2fa1      	MOV  R26,R17
00030c e0b0      	LDI  R27,0
00030d 5ea0      	SUBI R26,LOW(-_cable_func_handle)
00030e 4fbd      	SBCI R27,HIGH(-_cable_func_handle)
00030f 2fe1      	MOV  R30,R17
000310 5fed      	SUBI R30,-LOW(3)
000311 93ec      	ST   X,R30
                 ; 0002 003F             }
                 ; 0002 0040         }
                 _0x4000E:
000312 5f0f      	SUBI R16,-1
000313 cfd9      	RJMP _0x40008
                 _0x40009:
                 ; 0002 0041         if(flag.connect==1)
000314 91e0 0233 	LDS  R30,_flag
000316 70e1      	ANDI R30,LOW(0x1)
000317 30e1      	CPI  R30,LOW(0x1)
000318 f421      	BRNE _0x4000F
                 ; 0002 0042         {
                 ; 0002 0043             flag.connect=0;
000319 91e0 0233 	LDS  R30,_flag
00031b 7fee      	ANDI R30,0xFE
00031c c00b      	RJMP _0x4001C
                 ; 0002 0044         }
                 ; 0002 0045         else if(flag.connect==0)
                 _0x4000F:
00031d 91e0 0233 	LDS  R30,_flag
00031f 70e1      	ANDI R30,LOW(0x1)
000320 f449      	BRNE _0x40011
                 ; 0002 0046         {
                 ; 0002 0047              cable_func_handle.error_cable[i]=1;
000321 940e 0816 	CALL SUBOPT_0x13
000323 e0a1      	LDI  R26,LOW(1)
000324 83a0      	STD  Z+0,R26
                 ; 0002 0048              flag.notconnect=1;
000325 91e0 0233 	LDS  R30,_flag
000327 60e2      	ORI  R30,2
                 _0x4001C:
000328 93e0 0233 	STS  _flag,R30
                 ; 0002 0049         }
                 ; 0002 004A     }
                 _0x40011:
00032a 5f1f      	SUBI R17,-1
00032b cfb3      	RJMP _0x40005
                 _0x40006:
                 ; 0002 004B 
                 ; 0002 004C }
00032c 9109      	LD   R16,Y+
00032d 9119      	LD   R17,Y+
00032e 9508      	RET
                 ; .FEND
                 ;
                 ;struct FUNC_HANDLE Cable_Error_Check(void)
                 ; 0002 004F {
                 _Cable_Error_Check:
                 ; .FSTART _Cable_Error_Check
                 ; 0002 0050     uint8_t i=0;
                 ; 0002 0051     for(i=0;i<MAX_CABLE_PINS;i++)
00032f 9763      	SBIW R28,19
000330 931a      	ST   -Y,R17
                 ;	i -> R17
000331 e010      	LDI  R17,0
000332 e010      	LDI  R17,LOW(0)
                 _0x40013:
000333 3018      	CPI  R17,8
000334 f5b8      	BRSH _0x40014
                 ; 0002 0052     {
                 ; 0002 0053         if(cable_func_handle.error_cable[i]==i+3)
000335 940e 0816 	CALL SUBOPT_0x13
000337 81a0      	LD   R26,Z
000338 2fe1      	MOV  R30,R17
000339 e0f0      	LDI  R31,0
00033a 9633      	ADIW R30,3
00033b e0b0      	LDI  R27,0
00033c 17ea      	CP   R30,R26
00033d 07fb      	CPC  R31,R27
00033e f421      	BRNE _0x40015
                 ; 0002 0054         {
                 ; 0002 0055             cable_func_handle.error_symbol[i]=CONFLICT;
00033f 940e 081b 	CALL SUBOPT_0x14
000341 e4e3      	LDI  R30,LOW(67)
000342 c026      	RJMP _0x4001D
                 ; 0002 0056         }
                 ; 0002 0057         else if(cable_func_handle.error_cable[i]==i+2)
                 _0x40015:
000343 940e 0816 	CALL SUBOPT_0x13
000345 81a0      	LD   R26,Z
000346 2fe1      	MOV  R30,R17
000347 e0f0      	LDI  R31,0
000348 9632      	ADIW R30,2
000349 e0b0      	LDI  R27,0
00034a 17ea      	CP   R30,R26
00034b 07fb      	CPC  R31,R27
00034c f421      	BRNE _0x40017
                 ; 0002 0058         {
                 ; 0002 0059              cable_func_handle.error_symbol[i]= WRONG;
00034d 940e 081b 	CALL SUBOPT_0x14
00034f e5e7      	LDI  R30,LOW(87)
000350 c018      	RJMP _0x4001D
                 ; 0002 005A         }
                 ; 0002 005B         else if(cable_func_handle.error_cable[i]==0)
                 _0x40017:
000351 940e 0816 	CALL SUBOPT_0x13
000353 81e0      	LD   R30,Z
000354 30e0      	CPI  R30,0
000355 f459      	BRNE _0x40019
                 ; 0002 005C         {
                 ; 0002 005D              cable_func_handle.error_symbol[i]= GOOD;
000356 940e 081b 	CALL SUBOPT_0x14
000358 e4e7      	LDI  R30,LOW(71)
000359 93ec      	ST   X,R30
                 ; 0002 005E              cable_func_handle.pass_pins++;
                +
00035a 91e0 0232+LDS R30 , _cable_func_handle + ( 18 )
                 	__GETB1MN _cable_func_handle,18
00035c 5fef      	SUBI R30,-LOW(1)
                +
00035d 93e0 0232+STS _cable_func_handle + ( 18 ) , R30
                 	__PUTB1MN _cable_func_handle,18
00035f 50e1      	SUBI R30,LOW(1)
                 ; 0002 005F         }
                 ; 0002 0060         else if(cable_func_handle.error_cable[i]==1)
000360 c009      	RJMP _0x4001A
                 _0x40019:
000361 940e 0816 	CALL SUBOPT_0x13
000363 81a0      	LD   R26,Z
000364 30a1      	CPI  R26,LOW(0x1)
000365 f421      	BRNE _0x4001B
                 ; 0002 0061         {
                 ; 0002 0062              cable_func_handle.error_symbol[i]= NOCONNECT;
000366 940e 081b 	CALL SUBOPT_0x14
000368 e4ee      	LDI  R30,LOW(78)
                 _0x4001D:
000369 93ec      	ST   X,R30
                 ; 0002 0063         }
                 ; 0002 0064     }
                 _0x4001B:
                 _0x4001A:
00036a 5f1f      	SUBI R17,-1
00036b cfc7      	RJMP _0x40013
                 _0x40014:
                 ; 0002 0065 
                 ; 0002 0066     return cable_func_handle;
00036c e2e0      	LDI  R30,LOW(_cable_func_handle)
00036d e0f2      	LDI  R31,HIGH(_cable_func_handle)
00036e 01de      	MOVW R26,R28
00036f 9611      	ADIW R26,1
000370 e183      	LDI  R24,19
000371 940e 08e5 	CALL __COPYMML
000373 01fe      	MOVW R30,R28
000374 9631      	ADIW R30,1
000375 e183      	LDI  R24,19
000376 8118      	LDD  R17,Y+0
000377 940c 0662 	JMP  _0x20C0005
                 ; 0002 0067 }
                 ; .FEND
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;#include "button_function.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;
                 ;
                 ;struct FLAGS_B flags_b;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;void main_menu_button_manager_func(void)
                 ; 0003 000B {
                 
                 	.CSEG
                 _main_menu_button_manager_func:
                 ; .FSTART _main_menu_button_manager_func
                 ; 0003 000C     if(ENTER_BUTTON_PUSHED==1)
000379 940e 0821 	CALL SUBOPT_0x15
00037b f451      	BRNE _0x60004
00037c 91e0 0254 	LDS  R30,_flags_b
00037e 70e2      	ANDI R30,LOW(0x2)
00037f f431      	BRNE _0x60004
000380 91e0 0254 	LDS  R30,_flags_b
000382 70e4      	ANDI R30,LOW(0x4)
000383 f411      	BRNE _0x60004
000384 e0e1      	LDI  R30,1
000385 c001      	RJMP _0x60005
                 _0x60004:
000386 e0e0      	LDI  R30,0
                 _0x60005:
000387 30e1      	CPI  R30,LOW(0x1)
000388 f529      	BRNE _0x60003
                 ; 0003 000D     {
                 ; 0003 000E         flags_b.enter=0;
000389 940e 0826 	CALL SUBOPT_0x16
                 ; 0003 000F         switch (Menue_Cable_Select_Num)
00038b 91e0 024c 	LDS  R30,_Menue_Cable_Select_Num
00038d e0f0      	LDI  R31,0
00038e fde7      	SBRC R30,7
00038f efff      	SER  R31
                 ; 0003 0010         {
                 ; 0003 0011         case RUN_TEST_PAGE:
000390 9730      	SBIW R30,0
000391 f421      	BRNE _0x60009
                 ; 0003 0012             page=RUN_TEST_PAGE;
000392 e0e0      	LDI  R30,LOW(0)
000393 93e0 0253 	STS  _page,R30
                 ; 0003 0013             break;
000395 c017      	RJMP _0x60008
                 ; 0003 0014         case CABLE_SELSECT_PAGE:
                 _0x60009:
000396 30e1      	CPI  R30,LOW(0x1)
000397 e0a0      	LDI  R26,HIGH(0x1)
000398 07fa      	CPC  R31,R26
000399 f421      	BRNE _0x6000A
                 ; 0003 0015             page=CABLE_SELSECT_PAGE;
00039a e0e1      	LDI  R30,LOW(1)
00039b 93e0 0253 	STS  _page,R30
                 ; 0003 0016             break;
00039d c00f      	RJMP _0x60008
                 ; 0003 0017         case CABLE_DEFINE_PAGE:
                 _0x6000A:
00039e 30e2      	CPI  R30,LOW(0x2)
00039f e0a0      	LDI  R26,HIGH(0x2)
0003a0 07fa      	CPC  R31,R26
0003a1 f421      	BRNE _0x6000B
                 ; 0003 0018             page=CABLE_DEFINE_PAGE;
0003a2 e0e2      	LDI  R30,LOW(2)
0003a3 93e0 0253 	STS  _page,R30
                 ; 0003 0019             break;
0003a5 c007      	RJMP _0x60008
                 ; 0003 001A         case ABOUT_ME_PAGE:
                 _0x6000B:
0003a6 30e3      	CPI  R30,LOW(0x3)
0003a7 e0a0      	LDI  R26,HIGH(0x3)
0003a8 07fa      	CPC  R31,R26
0003a9 f419      	BRNE _0x6000D
                 ; 0003 001B             page=ABOUT_ME_PAGE;
0003aa e0e3      	LDI  R30,LOW(3)
0003ab 93e0 0253 	STS  _page,R30
                 ; 0003 001C             break;
                 ; 0003 001D         default:
                 _0x6000D:
                 ; 0003 001E             break;
                 ; 0003 001F         }
                 _0x60008:
                 ; 0003 0020     }
                 ; 0003 0021     else if(UP_BUTTON_PUSHED==1)
0003ad c03d      	RJMP _0x6000E
                 _0x60003:
0003ae 91e0 0254 	LDS  R30,_flags_b
0003b0 70e1      	ANDI R30,LOW(0x1)
0003b1 f449      	BRNE _0x60010
0003b2 940e 082c 	CALL SUBOPT_0x17
0003b4 f431      	BRNE _0x60010
0003b5 91e0 0254 	LDS  R30,_flags_b
0003b7 70e4      	ANDI R30,LOW(0x4)
0003b8 f411      	BRNE _0x60010
0003b9 e0e1      	LDI  R30,1
0003ba c001      	RJMP _0x60011
                 _0x60010:
0003bb e0e0      	LDI  R30,0
                 _0x60011:
0003bc 30e1      	CPI  R30,LOW(0x1)
0003bd f479      	BRNE _0x6000F
                 ; 0003 0022     {
                 ; 0003 0023         flags_b.up=0;
0003be 940e 0831 	CALL SUBOPT_0x18
                 ; 0003 0024         Menue_Main_Num++;
0003c0 91e0 024b 	LDS  R30,_Menue_Main_Num
0003c2 5fef      	SUBI R30,-LOW(1)
0003c3 93e0 024b 	STS  _Menue_Main_Num,R30
                 ; 0003 0025         if(Menue_Main_Num>=(MAX_MAIN_MENU_ITEM-1))
0003c5 91a0 024b 	LDS  R26,_Menue_Main_Num
0003c7 30a3      	CPI  R26,LOW(0x3)
0003c8 f01c      	BRLT _0x60012
                 ; 0003 0026             Menue_Main_Num=0;
0003c9 e0e0      	LDI  R30,LOW(0)
0003ca 93e0 024b 	STS  _Menue_Main_Num,R30
                 ; 0003 0027     }
                 _0x60012:
                 ; 0003 0028     else if(DOWN_BUTTON_PUSHED==1)
0003cc c01e      	RJMP _0x60013
                 _0x6000F:
0003cd 91e0 0254 	LDS  R30,_flags_b
0003cf 70e1      	ANDI R30,LOW(0x1)
0003d0 f449      	BRNE _0x60015
0003d1 91e0 0254 	LDS  R30,_flags_b
0003d3 70e2      	ANDI R30,LOW(0x2)
0003d4 f429      	BRNE _0x60015
0003d5 940e 0837 	CALL SUBOPT_0x19
0003d7 f411      	BRNE _0x60015
0003d8 e0e1      	LDI  R30,1
0003d9 c001      	RJMP _0x60016
                 _0x60015:
0003da e0e0      	LDI  R30,0
                 _0x60016:
0003db 30e1      	CPI  R30,LOW(0x1)
0003dc f471      	BRNE _0x60014
                 ; 0003 0029     {
                 ; 0003 002A         flags_b.down=0;
0003dd 940e 083c 	CALL SUBOPT_0x1A
                 ; 0003 002B         Menue_Main_Num--;
0003df 91e0 024b 	LDS  R30,_Menue_Main_Num
0003e1 50e1      	SUBI R30,LOW(1)
0003e2 93e0 024b 	STS  _Menue_Main_Num,R30
                 ; 0003 002C         if(Menue_Main_Num<0)
0003e4 91a0 024b 	LDS  R26,_Menue_Main_Num
0003e6 30a0      	CPI  R26,0
0003e7 f41c      	BRGE _0x60017
                 ; 0003 002D             Menue_Main_Num=(MAX_MAIN_MENU_ITEM-1);
0003e8 e0e3      	LDI  R30,LOW(3)
0003e9 93e0 024b 	STS  _Menue_Main_Num,R30
                 ; 0003 002E     }
                 _0x60017:
                 ; 0003 002F 
                 ; 0003 0030 }
                 _0x60014:
                 _0x60013:
                 _0x6000E:
0003eb 9508      	RET
                 ; .FEND
                 ;
                 ;void cable_select_button_manager_func(void)
                 ; 0003 0033 {
                 _cable_select_button_manager_func:
                 ; .FSTART _cable_select_button_manager_func
                 ; 0003 0034     if(ENTER_BUTTON_PUSHED==1)
0003ec 940e 0821 	CALL SUBOPT_0x15
0003ee f451      	BRNE _0x60019
0003ef 91e0 0254 	LDS  R30,_flags_b
0003f1 70e2      	ANDI R30,LOW(0x2)
0003f2 f431      	BRNE _0x60019
0003f3 91e0 0254 	LDS  R30,_flags_b
0003f5 70e4      	ANDI R30,LOW(0x4)
0003f6 f411      	BRNE _0x60019
0003f7 e0e1      	LDI  R30,1
0003f8 c001      	RJMP _0x6001A
                 _0x60019:
0003f9 e0e0      	LDI  R30,0
                 _0x6001A:
0003fa 30e1      	CPI  R30,LOW(0x1)
0003fb f431      	BRNE _0x60018
                 ; 0003 0035     {
                 ; 0003 0036         flags_b.enter=0;
0003fc 940e 0826 	CALL SUBOPT_0x16
                 ; 0003 0037         page=MAIN_PAGE;
0003fe e0e4      	LDI  R30,LOW(4)
0003ff 93e0 0253 	STS  _page,R30
                 ; 0003 0038     }
                 ; 0003 0039     else if(UP_BUTTON_PUSHED==1)
000401 c031      	RJMP _0x6001B
                 _0x60018:
000402 91e0 0254 	LDS  R30,_flags_b
000404 70e1      	ANDI R30,LOW(0x1)
000405 f449      	BRNE _0x6001D
000406 940e 082c 	CALL SUBOPT_0x17
000408 f431      	BRNE _0x6001D
000409 91e0 0254 	LDS  R30,_flags_b
00040b 70e4      	ANDI R30,LOW(0x4)
00040c f411      	BRNE _0x6001D
00040d e0e1      	LDI  R30,1
00040e c001      	RJMP _0x6001E
                 _0x6001D:
00040f e0e0      	LDI  R30,0
                 _0x6001E:
000410 30e1      	CPI  R30,LOW(0x1)
000411 f449      	BRNE _0x6001C
                 ; 0003 003A     {
                 ; 0003 003B         flags_b.up=0;
000412 940e 0831 	CALL SUBOPT_0x18
                 ; 0003 003C         Menue_Cable_Select_Num++;
000414 940e 0842 	CALL SUBOPT_0x1B
                 ; 0003 003D         if(Menue_Cable_Select_Num>MAX_NUMBER_PROFILE)
000416 f01c      	BRLT _0x6001F
                 ; 0003 003E            Menue_Cable_Select_Num=0;
000417 e0e0      	LDI  R30,LOW(0)
000418 93e0 024c 	STS  _Menue_Cable_Select_Num,R30
                 ; 0003 003F     }
                 _0x6001F:
                 ; 0003 0040     else if(DOWN_BUTTON_PUSHED==1)
00041a c018      	RJMP _0x60020
                 _0x6001C:
00041b 91e0 0254 	LDS  R30,_flags_b
00041d 70e1      	ANDI R30,LOW(0x1)
00041e f449      	BRNE _0x60022
00041f 91e0 0254 	LDS  R30,_flags_b
000421 70e2      	ANDI R30,LOW(0x2)
000422 f429      	BRNE _0x60022
000423 940e 0837 	CALL SUBOPT_0x19
000425 f411      	BRNE _0x60022
000426 e0e1      	LDI  R30,1
000427 c001      	RJMP _0x60023
                 _0x60022:
000428 e0e0      	LDI  R30,0
                 _0x60023:
000429 30e1      	CPI  R30,LOW(0x1)
00042a f441      	BRNE _0x60021
                 ; 0003 0041     {
                 ; 0003 0042         flags_b.down=0;
00042b 940e 083c 	CALL SUBOPT_0x1A
                 ; 0003 0043         Menue_Cable_Select_Num--;
00042d 940e 084b 	CALL SUBOPT_0x1C
                 ; 0003 0044         if(Menue_Cable_Select_Num<0)
00042f f41c      	BRGE _0x60024
                 ; 0003 0045             Menue_Cable_Select_Num=MAX_NUMBER_PROFILE;
000430 e0ec      	LDI  R30,LOW(12)
000431 93e0 024c 	STS  _Menue_Cable_Select_Num,R30
                 ; 0003 0046     }
                 _0x60024:
                 ; 0003 0047 }
                 _0x60021:
                 _0x60020:
                 _0x6001B:
000433 9508      	RET
                 ; .FEND
                 ;
                 ;void cable_define_button_manager_func(void)
                 ; 0003 004A {
                 _cable_define_button_manager_func:
                 ; .FSTART _cable_define_button_manager_func
                 ; 0003 004B     if(ENTER_BUTTON_PUSHED==1)
000434 940e 0821 	CALL SUBOPT_0x15
000436 f451      	BRNE _0x60026
000437 91e0 0254 	LDS  R30,_flags_b
000439 70e2      	ANDI R30,LOW(0x2)
00043a f431      	BRNE _0x60026
00043b 91e0 0254 	LDS  R30,_flags_b
00043d 70e4      	ANDI R30,LOW(0x4)
00043e f411      	BRNE _0x60026
00043f e0e1      	LDI  R30,1
000440 c001      	RJMP _0x60027
                 _0x60026:
000441 e0e0      	LDI  R30,0
                 _0x60027:
000442 30e1      	CPI  R30,LOW(0x1)
000443 f511      	BRNE _0x60025
                 ; 0003 004C     {
                 ; 0003 004D         flags_b.enter=0;
000444 940e 0826 	CALL SUBOPT_0x16
                 ; 0003 004E         if (flags_menu.subpage==IN_SELECT)
000446 91e0 0252 	LDS  R30,_flags_menu
000448 70e7      	ANDI R30,LOW(0x7)
000449 30e2      	CPI  R30,LOW(0x2)
00044a f429      	BRNE _0x60028
                 ; 0003 004F         {
                 ; 0003 0050            flags_menu.subpage=OUT_SELECT;
00044b 91e0 0252 	LDS  R30,_flags_menu
00044d 7fe8      	ANDI R30,LOW(0xF8)
00044e 60e3      	ORI  R30,LOW(0x3)
00044f c013      	RJMP _0x60046
                 ; 0003 0051         }
                 ; 0003 0052         else if (flags_menu.subpage==OUT_SELECT)
                 _0x60028:
000450 91e0 0252 	LDS  R30,_flags_menu
000452 70e7      	ANDI R30,LOW(0x7)
000453 30e3      	CPI  R30,LOW(0x3)
000454 f429      	BRNE _0x6002A
                 ; 0003 0053         {
                 ; 0003 0054             flags_menu.subpage=PROF_SELECT;
000455 91e0 0252 	LDS  R30,_flags_menu
000457 7fe8      	ANDI R30,LOW(0xF8)
000458 60e4      	ORI  R30,4
000459 c009      	RJMP _0x60046
                 ; 0003 0055         }
                 ; 0003 0056         else if(flags_menu.subpage==PROF_SELECT)
                 _0x6002A:
00045a 91e0 0252 	LDS  R30,_flags_menu
00045c 70e7      	ANDI R30,LOW(0x7)
00045d 30e4      	CPI  R30,LOW(0x4)
00045e f431      	BRNE _0x6002C
                 ; 0003 0057         {
                 ; 0003 0058             flags_menu.subpage=IN_SELECT;
00045f 91e0 0252 	LDS  R30,_flags_menu
000461 7fe8      	ANDI R30,LOW(0xF8)
000462 60e2      	ORI  R30,2
                 _0x60046:
000463 93e0 0252 	STS  _flags_menu,R30
                 ; 0003 0059         }
                 ; 0003 005A 
                 ; 0003 005B     }
                 _0x6002C:
                 ; 0003 005C     else if(UP_BUTTON_PUSHED==1)
000465 c048      	RJMP _0x6002D
                 _0x60025:
000466 91e0 0254 	LDS  R30,_flags_b
000468 70e1      	ANDI R30,LOW(0x1)
000469 f449      	BRNE _0x6002F
00046a 940e 082c 	CALL SUBOPT_0x17
00046c f431      	BRNE _0x6002F
00046d 91e0 0254 	LDS  R30,_flags_b
00046f 70e4      	ANDI R30,LOW(0x4)
000470 f411      	BRNE _0x6002F
000471 e0e1      	LDI  R30,1
000472 c001      	RJMP _0x60030
                 _0x6002F:
000473 e0e0      	LDI  R30,0
                 _0x60030:
000474 30e1      	CPI  R30,LOW(0x1)
000475 f449      	BRNE _0x6002E
                 ; 0003 005D     {
                 ; 0003 005E         flags_b.up=0;
000476 940e 0831 	CALL SUBOPT_0x18
                 ; 0003 005F         Menue_Cable_Select_Num++;
000478 940e 0842 	CALL SUBOPT_0x1B
                 ; 0003 0060         if(Menue_Cable_Select_Num>MAX_NUMBER_PROFILE)
00047a f01c      	BRLT _0x60031
                 ; 0003 0061            Menue_Cable_Select_Num=0;
00047b e0e0      	LDI  R30,LOW(0)
00047c 93e0 024c 	STS  _Menue_Cable_Select_Num,R30
                 ; 0003 0062     }
                 _0x60031:
                 ; 0003 0063     else if(DOWN_BUTTON_PUSHED==1)
00047e c02f      	RJMP _0x60032
                 _0x6002E:
00047f 91e0 0254 	LDS  R30,_flags_b
000481 70e1      	ANDI R30,LOW(0x1)
000482 f449      	BRNE _0x60034
000483 91e0 0254 	LDS  R30,_flags_b
000485 70e2      	ANDI R30,LOW(0x2)
000486 f429      	BRNE _0x60034
000487 940e 0837 	CALL SUBOPT_0x19
000489 f411      	BRNE _0x60034
00048a e0e1      	LDI  R30,1
00048b c001      	RJMP _0x60035
                 _0x60034:
00048c e0e0      	LDI  R30,0
                 _0x60035:
00048d 30e1      	CPI  R30,LOW(0x1)
00048e f449      	BRNE _0x60033
                 ; 0003 0064     {
                 ; 0003 0065         flags_b.down=0;
00048f 940e 083c 	CALL SUBOPT_0x1A
                 ; 0003 0066         Menue_Cable_Select_Num--;
000491 940e 084b 	CALL SUBOPT_0x1C
                 ; 0003 0067         if(Menue_Cable_Select_Num<0)
000493 f41c      	BRGE _0x60036
                 ; 0003 0068             Menue_Cable_Select_Num=MAX_NUMBER_PROFILE;
000494 e0ec      	LDI  R30,LOW(12)
000495 93e0 024c 	STS  _Menue_Cable_Select_Num,R30
                 ; 0003 0069     }
                 _0x60036:
                 ; 0003 006A     else if(EXIT_BUTTON_PUSHED==1)
000497 c016      	RJMP _0x60037
                 _0x60033:
000498 91e0 0254 	LDS  R30,_flags_b
00049a 70e1      	ANDI R30,LOW(0x1)
00049b f441      	BRNE _0x60039
00049c 940e 082c 	CALL SUBOPT_0x17
00049e f429      	BRNE _0x60039
00049f 940e 0837 	CALL SUBOPT_0x19
0004a1 f411      	BRNE _0x60039
0004a2 e0e1      	LDI  R30,1
0004a3 c001      	RJMP _0x6003A
                 _0x60039:
0004a4 e0e0      	LDI  R30,0
                 _0x6003A:
0004a5 30e1      	CPI  R30,LOW(0x1)
0004a6 f439      	BRNE _0x60038
                 ; 0003 006B     {
                 ; 0003 006C          flags_b.up=0;
0004a7 940e 0831 	CALL SUBOPT_0x18
                 ; 0003 006D           flags_b.down=0;
0004a9 940e 083c 	CALL SUBOPT_0x1A
                 ; 0003 006E           page=MAIN_PAGE;
0004ab e0e4      	LDI  R30,LOW(4)
0004ac 93e0 0253 	STS  _page,R30
                 ; 0003 006F     }
                 ; 0003 0070 }
                 _0x60038:
                 _0x60037:
                 _0x60032:
                 _0x6002D:
0004ae 9508      	RET
                 ; .FEND
                 ;
                 ;void about_me_button_manager_func(void)
                 ; 0003 0073 {
                 _about_me_button_manager_func:
                 ; .FSTART _about_me_button_manager_func
                 ; 0003 0074     if(ENTER_BUTTON_PUSHED==1)
0004af 940e 0821 	CALL SUBOPT_0x15
0004b1 f451      	BRNE _0x6003C
0004b2 91e0 0254 	LDS  R30,_flags_b
0004b4 70e2      	ANDI R30,LOW(0x2)
0004b5 f431      	BRNE _0x6003C
0004b6 91e0 0254 	LDS  R30,_flags_b
0004b8 70e4      	ANDI R30,LOW(0x4)
0004b9 f411      	BRNE _0x6003C
0004ba e0e1      	LDI  R30,1
0004bb c001      	RJMP _0x6003D
                 _0x6003C:
0004bc e0e0      	LDI  R30,0
                 _0x6003D:
0004bd 30e1      	CPI  R30,LOW(0x1)
0004be f421      	BRNE _0x6003B
                 ; 0003 0075     {
                 ; 0003 0076          flags_b.enter=0;
0004bf 91e0 0254 	LDS  R30,_flags_b
0004c1 7fee      	ANDI R30,0xFE
0004c2 c027      	RJMP _0x60047
                 ; 0003 0077         page=MAIN_PAGE;
                 ; 0003 0078     }
                 ; 0003 0079     else if(UP_BUTTON_PUSHED==1)
                 _0x6003B:
0004c3 91e0 0254 	LDS  R30,_flags_b
0004c5 70e1      	ANDI R30,LOW(0x1)
0004c6 f449      	BRNE _0x60040
0004c7 940e 082c 	CALL SUBOPT_0x17
0004c9 f431      	BRNE _0x60040
0004ca 91e0 0254 	LDS  R30,_flags_b
0004cc 70e4      	ANDI R30,LOW(0x4)
0004cd f411      	BRNE _0x60040
0004ce e0e1      	LDI  R30,1
0004cf c001      	RJMP _0x60041
                 _0x60040:
0004d0 e0e0      	LDI  R30,0
                 _0x60041:
0004d1 30e1      	CPI  R30,LOW(0x1)
0004d2 f421      	BRNE _0x6003F
                 ; 0003 007A     {
                 ; 0003 007B          flags_b.up=0;
0004d3 91e0 0254 	LDS  R30,_flags_b
0004d5 7fed      	ANDI R30,0xFD
0004d6 c013      	RJMP _0x60047
                 ; 0003 007C         page=MAIN_PAGE;
                 ; 0003 007D     }
                 ; 0003 007E     else if(DOWN_BUTTON_PUSHED==1)
                 _0x6003F:
0004d7 91e0 0254 	LDS  R30,_flags_b
0004d9 70e1      	ANDI R30,LOW(0x1)
0004da f449      	BRNE _0x60044
0004db 91e0 0254 	LDS  R30,_flags_b
0004dd 70e2      	ANDI R30,LOW(0x2)
0004de f429      	BRNE _0x60044
0004df 940e 0837 	CALL SUBOPT_0x19
0004e1 f411      	BRNE _0x60044
0004e2 e0e1      	LDI  R30,1
0004e3 c001      	RJMP _0x60045
                 _0x60044:
0004e4 e0e0      	LDI  R30,0
                 _0x60045:
0004e5 30e1      	CPI  R30,LOW(0x1)
0004e6 f441      	BRNE _0x60043
                 ; 0003 007F     {
                 ; 0003 0080          flags_b.down=0;
0004e7 91e0 0254 	LDS  R30,_flags_b
0004e9 7feb      	ANDI R30,0xFB
                 _0x60047:
0004ea 93e0 0254 	STS  _flags_b,R30
                 ; 0003 0081         page=MAIN_PAGE;
0004ec e0e4      	LDI  R30,LOW(4)
0004ed 93e0 0253 	STS  _page,R30
                 ; 0003 0082     }
                 ; 0003 0083 
                 ; 0003 0084 
                 ; 0003 0085 }
                 _0x60043:
0004ef 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;/*
                 ;int8_t button_read(struct BUTTON_PORTS_PINS port)
                 ;{
                 ;    if((*Read_Pin_B)(port.b1_port,port.b1_pin)==PUSHED)
                 ;    {
                 ;         flags_b.enter=1;
                 ;    }
                 ;    if((*Read_Pin_B)(port.b2_port,port.b2_pin)==PUSHED)
                 ;    {
                 ;         flags_b.up=1;
                 ;    }
                 ;    if((*Read_Pin_B)(port.b3_port,port.b3_pin)==PUSHED)
                 ;    {
                 ;         flags_b.down=1;
                 ;    }
                 ;
                 ;}
                 ;*/
                 ;
                 ;
                 ;
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0004f0 93ba      	ST   -Y,R27
0004f1 93aa      	ST   -Y,R26
0004f2 931a      	ST   -Y,R17
0004f3 930a      	ST   -Y,R16
0004f4 81aa      	LDD  R26,Y+2
0004f5 81bb      	LDD  R27,Y+2+1
0004f6 9612      	ADIW R26,2
0004f7 940e 08d3 	CALL __GETW1P
0004f9 9730      	SBIW R30,0
0004fa f159      	BREQ _0x2000010
0004fb 81aa      	LDD  R26,Y+2
0004fc 81bb      	LDD  R27,Y+2+1
0004fd 9614      	ADIW R26,4
0004fe 940e 08d3 	CALL __GETW1P
000500 018f      	MOVW R16,R30
000501 9730      	SBIW R30,0
000502 f061      	BREQ _0x2000012
                +
000503 3002     +CPI R16 , LOW ( 2 )
000504 e0e0     +LDI R30 , HIGH ( 2 )
000505 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000506 f098      	BRLO _0x2000013
000507 01f8      	MOVW R30,R16
000508 9731      	SBIW R30,1
000509 018f      	MOVW R16,R30
                +
00050a 81aa     +LDD R26 , Y + 2
00050b 81bb     +LDD R27 , Y + 2 + 1
00050c 9614     +ADIW R26 , 4
00050d 93ed     +ST X + , R30
00050e 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
00050f 81aa      	LDD  R26,Y+2
000510 81bb      	LDD  R27,Y+2+1
000511 9612      	ADIW R26,2
000512 91ed      	LD   R30,X+
000513 91fd      	LD   R31,X+
000514 9631      	ADIW R30,1
000515 93fe      	ST   -X,R31
000516 93ee      	ST   -X,R30
000517 9731      	SBIW R30,1
000518 81ac      	LDD  R26,Y+4
000519 83a0      	STD  Z+0,R26
                 _0x2000013:
00051a 81aa      	LDD  R26,Y+2
00051b 81bb      	LDD  R27,Y+2+1
00051c 940e 08d3 	CALL __GETW1P
00051e 23ff      	TST  R31
00051f f02a      	BRMI _0x2000014
000520 91ed      	LD   R30,X+
000521 91fd      	LD   R31,X+
000522 9631      	ADIW R30,1
000523 93fe      	ST   -X,R31
000524 93ee      	ST   -X,R30
                 _0x2000014:
000525 c006      	RJMP _0x2000015
                 _0x2000010:
000526 81aa      	LDD  R26,Y+2
000527 81bb      	LDD  R27,Y+2+1
000528 efef      	LDI  R30,LOW(65535)
000529 efff      	LDI  R31,HIGH(65535)
00052a 93ed      	ST   X+,R30
00052b 93fc      	ST   X,R31
                 _0x2000015:
00052c 8119      	LDD  R17,Y+1
00052d 8108      	LDD  R16,Y+0
00052e 940c 06c6 	JMP  _0x20C0002
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000530 93ba      	ST   -Y,R27
000531 93aa      	ST   -Y,R26
000532 9726      	SBIW R28,6
000533 940e 08ef 	CALL __SAVELOCR6
000535 e010      	LDI  R17,0
000536 85ac      	LDD  R26,Y+12
000537 85bd      	LDD  R27,Y+12+1
000538 e0e0      	LDI  R30,LOW(0)
000539 e0f0      	LDI  R31,HIGH(0)
00053a 93ed      	ST   X+,R30
00053b 93fc      	ST   X,R31
                 _0x2000016:
00053c 89ea      	LDD  R30,Y+18
00053d 89fb      	LDD  R31,Y+18+1
00053e 9631      	ADIW R30,1
00053f 8bea      	STD  Y+18,R30
000540 8bfb      	STD  Y+18+1,R31
000541 9731      	SBIW R30,1
000542 91e4      	LPM  R30,Z
000543 2f2e      	MOV  R18,R30
000544 30e0      	CPI  R30,0
000545 f409      	BRNE PC+2
000546 c115      	RJMP _0x2000018
000547 2fe1      	MOV  R30,R17
000548 30e0      	CPI  R30,0
000549 f439      	BRNE _0x200001C
00054a 3225      	CPI  R18,37
00054b f411      	BRNE _0x200001D
00054c e011      	LDI  R17,LOW(1)
00054d c002      	RJMP _0x200001E
                 _0x200001D:
00054e 940e 0854 	CALL SUBOPT_0x1D
                 _0x200001E:
000550 c10a      	RJMP _0x200001B
                 _0x200001C:
000551 30e1      	CPI  R30,LOW(0x1)
000552 f4a9      	BRNE _0x200001F
000553 3225      	CPI  R18,37
000554 f419      	BRNE _0x2000020
000555 940e 0854 	CALL SUBOPT_0x1D
000557 c102      	RJMP _0x20000CC
                 _0x2000020:
000558 e012      	LDI  R17,LOW(2)
000559 e040      	LDI  R20,LOW(0)
00055a e000      	LDI  R16,LOW(0)
00055b 322d      	CPI  R18,45
00055c f411      	BRNE _0x2000021
00055d e001      	LDI  R16,LOW(1)
00055e c0fc      	RJMP _0x200001B
                 _0x2000021:
00055f 322b      	CPI  R18,43
000560 f411      	BRNE _0x2000022
000561 e24b      	LDI  R20,LOW(43)
000562 c0f8      	RJMP _0x200001B
                 _0x2000022:
000563 3220      	CPI  R18,32
000564 f411      	BRNE _0x2000023
000565 e240      	LDI  R20,LOW(32)
000566 c0f4      	RJMP _0x200001B
                 _0x2000023:
000567 c002      	RJMP _0x2000024
                 _0x200001F:
000568 30e2      	CPI  R30,LOW(0x2)
000569 f439      	BRNE _0x2000025
                 _0x2000024:
00056a e050      	LDI  R21,LOW(0)
00056b e013      	LDI  R17,LOW(3)
00056c 3320      	CPI  R18,48
00056d f411      	BRNE _0x2000026
00056e 6800      	ORI  R16,LOW(128)
00056f c0eb      	RJMP _0x200001B
                 _0x2000026:
000570 c003      	RJMP _0x2000027
                 _0x2000025:
000571 30e3      	CPI  R30,LOW(0x3)
000572 f009      	BREQ PC+2
000573 c0e7      	RJMP _0x200001B
                 _0x2000027:
000574 3320      	CPI  R18,48
000575 f010      	BRLO _0x200002A
000576 332a      	CPI  R18,58
000577 f008      	BRLO _0x200002B
                 _0x200002A:
000578 c007      	RJMP _0x2000029
                 _0x200002B:
000579 e0aa      	LDI  R26,LOW(10)
00057a 9f5a      	MUL  R21,R26
00057b 2d50      	MOV  R21,R0
00057c 2fe2      	MOV  R30,R18
00057d 53e0      	SUBI R30,LOW(48)
00057e 0f5e      	ADD  R21,R30
00057f c0db      	RJMP _0x200001B
                 _0x2000029:
000580 2fe2      	MOV  R30,R18
000581 36e3      	CPI  R30,LOW(0x63)
000582 f449      	BRNE _0x200002F
000583 940e 085b 	CALL SUBOPT_0x1E
000585 89e8      	LDD  R30,Y+16
000586 89f9      	LDD  R31,Y+16+1
000587 81a4      	LDD  R26,Z+4
000588 93aa      	ST   -Y,R26
000589 940e 0861 	CALL SUBOPT_0x1F
00058b c0ce      	RJMP _0x2000030
                 _0x200002F:
00058c 37e3      	CPI  R30,LOW(0x73)
00058d f441      	BRNE _0x2000032
00058e 940e 085b 	CALL SUBOPT_0x1E
000590 940e 0867 	CALL SUBOPT_0x20
000592 940e 06c8 	CALL _strlen
000594 2f1e      	MOV  R17,R30
000595 c00a      	RJMP _0x2000033
                 _0x2000032:
000596 37e0      	CPI  R30,LOW(0x70)
000597 f461      	BRNE _0x2000035
000598 940e 085b 	CALL SUBOPT_0x1E
00059a 940e 0867 	CALL SUBOPT_0x20
00059c 940e 06d4 	CALL _strlenf
00059e 2f1e      	MOV  R17,R30
00059f 6008      	ORI  R16,LOW(8)
                 _0x2000033:
0005a0 6002      	ORI  R16,LOW(2)
0005a1 770f      	ANDI R16,LOW(127)
0005a2 e030      	LDI  R19,LOW(0)
0005a3 c034      	RJMP _0x2000036
                 _0x2000035:
0005a4 36e4      	CPI  R30,LOW(0x64)
0005a5 f011      	BREQ _0x2000039
0005a6 36e9      	CPI  R30,LOW(0x69)
0005a7 f411      	BRNE _0x200003A
                 _0x2000039:
0005a8 6004      	ORI  R16,LOW(4)
0005a9 c002      	RJMP _0x200003B
                 _0x200003A:
0005aa 37e5      	CPI  R30,LOW(0x75)
0005ab f431      	BRNE _0x200003C
                 _0x200003B:
0005ac e5e4      	LDI  R30,LOW(_tbl10_G100*2)
0005ad e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
0005ae 83ee      	STD  Y+6,R30
0005af 83ff      	STD  Y+6+1,R31
0005b0 e015      	LDI  R17,LOW(5)
0005b1 c00c      	RJMP _0x200003D
                 _0x200003C:
0005b2 35e8      	CPI  R30,LOW(0x58)
0005b3 f411      	BRNE _0x200003F
0005b4 6008      	ORI  R16,LOW(8)
0005b5 c003      	RJMP _0x2000040
                 _0x200003F:
0005b6 37e8      	CPI  R30,LOW(0x78)
0005b7 f009      	BREQ PC+2
0005b8 c0a1      	RJMP _0x2000071
                 _0x2000040:
0005b9 e5ee      	LDI  R30,LOW(_tbl16_G100*2)
0005ba e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
0005bb 83ee      	STD  Y+6,R30
0005bc 83ff      	STD  Y+6+1,R31
0005bd e014      	LDI  R17,LOW(4)
                 _0x200003D:
0005be ff02      	SBRS R16,2
0005bf c014      	RJMP _0x2000042
0005c0 940e 085b 	CALL SUBOPT_0x1E
0005c2 940e 0871 	CALL SUBOPT_0x21
0005c4 85ab      	LDD  R26,Y+11
0005c5 23aa      	TST  R26
0005c6 f43a      	BRPL _0x2000043
0005c7 85ea      	LDD  R30,Y+10
0005c8 85fb      	LDD  R31,Y+10+1
0005c9 940e 08bb 	CALL __ANEGW1
0005cb 87ea      	STD  Y+10,R30
0005cc 87fb      	STD  Y+10+1,R31
0005cd e24d      	LDI  R20,LOW(45)
                 _0x2000043:
0005ce 3040      	CPI  R20,0
0005cf f011      	BREQ _0x2000044
0005d0 5f1f      	SUBI R17,-LOW(1)
0005d1 c001      	RJMP _0x2000045
                 _0x2000044:
0005d2 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
0005d3 c004      	RJMP _0x2000046
                 _0x2000042:
0005d4 940e 085b 	CALL SUBOPT_0x1E
0005d6 940e 0871 	CALL SUBOPT_0x21
                 _0x2000046:
                 _0x2000036:
0005d8 fd00      	SBRC R16,0
0005d9 c011      	RJMP _0x2000047
                 _0x2000048:
0005da 1715      	CP   R17,R21
0005db f478      	BRSH _0x200004A
0005dc ff07      	SBRS R16,7
0005dd c008      	RJMP _0x200004B
0005de ff02      	SBRS R16,2
0005df c004      	RJMP _0x200004C
0005e0 7f0b      	ANDI R16,LOW(251)
0005e1 2f24      	MOV  R18,R20
0005e2 5011      	SUBI R17,LOW(1)
0005e3 c001      	RJMP _0x200004D
                 _0x200004C:
0005e4 e320      	LDI  R18,LOW(48)
                 _0x200004D:
0005e5 c001      	RJMP _0x200004E
                 _0x200004B:
0005e6 e220      	LDI  R18,LOW(32)
                 _0x200004E:
0005e7 940e 0854 	CALL SUBOPT_0x1D
0005e9 5051      	SUBI R21,LOW(1)
0005ea cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0005eb 2f31      	MOV  R19,R17
0005ec ff01      	SBRS R16,1
0005ed c017      	RJMP _0x200004F
                 _0x2000050:
0005ee 3030      	CPI  R19,0
0005ef f0a1      	BREQ _0x2000052
0005f0 ff03      	SBRS R16,3
0005f1 c006      	RJMP _0x2000053
0005f2 81ee      	LDD  R30,Y+6
0005f3 81ff      	LDD  R31,Y+6+1
0005f4 9125      	LPM  R18,Z+
0005f5 83ee      	STD  Y+6,R30
0005f6 83ff      	STD  Y+6+1,R31
0005f7 c005      	RJMP _0x2000054
                 _0x2000053:
0005f8 81ae      	LDD  R26,Y+6
0005f9 81bf      	LDD  R27,Y+6+1
0005fa 912d      	LD   R18,X+
0005fb 83ae      	STD  Y+6,R26
0005fc 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0005fd 940e 0854 	CALL SUBOPT_0x1D
0005ff 3050      	CPI  R21,0
000600 f009      	BREQ _0x2000055
000601 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000602 5031      	SUBI R19,LOW(1)
000603 cfea      	RJMP _0x2000050
                 _0x2000052:
000604 c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
000605 e320      	LDI  R18,LOW(48)
000606 81ee      	LDD  R30,Y+6
000607 81ff      	LDD  R31,Y+6+1
000608 940e 08d7 	CALL __GETW1PF
00060a 87e8      	STD  Y+8,R30
00060b 87f9      	STD  Y+8+1,R31
00060c 81ee      	LDD  R30,Y+6
00060d 81ff      	LDD  R31,Y+6+1
00060e 9632      	ADIW R30,2
00060f 83ee      	STD  Y+6,R30
000610 83ff      	STD  Y+6+1,R31
                 _0x200005A:
000611 85e8      	LDD  R30,Y+8
000612 85f9      	LDD  R31,Y+8+1
000613 85aa      	LDD  R26,Y+10
000614 85bb      	LDD  R27,Y+10+1
000615 17ae      	CP   R26,R30
000616 07bf      	CPC  R27,R31
000617 f050      	BRLO _0x200005C
000618 5f2f      	SUBI R18,-LOW(1)
000619 85a8      	LDD  R26,Y+8
00061a 85b9      	LDD  R27,Y+8+1
00061b 85ea      	LDD  R30,Y+10
00061c 85fb      	LDD  R31,Y+10+1
00061d 1bea      	SUB  R30,R26
00061e 0bfb      	SBC  R31,R27
00061f 87ea      	STD  Y+10,R30
000620 87fb      	STD  Y+10+1,R31
000621 cfef      	RJMP _0x200005A
                 _0x200005C:
000622 332a      	CPI  R18,58
000623 f028      	BRLO _0x200005D
000624 ff03      	SBRS R16,3
000625 c002      	RJMP _0x200005E
000626 5f29      	SUBI R18,-LOW(7)
000627 c001      	RJMP _0x200005F
                 _0x200005E:
000628 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
000629 fd04      	SBRC R16,4
00062a c01a      	RJMP _0x2000061
00062b 3321      	CPI  R18,49
00062c f420      	BRSH _0x2000063
00062d 85a8      	LDD  R26,Y+8
00062e 85b9      	LDD  R27,Y+8+1
00062f 9711      	SBIW R26,1
000630 f409      	BRNE _0x2000062
                 _0x2000063:
000631 c009      	RJMP _0x20000CD
                 _0x2000062:
000632 1753      	CP   R21,R19
000633 f010      	BRLO _0x2000067
000634 ff00      	SBRS R16,0
000635 c001      	RJMP _0x2000068
                 _0x2000067:
000636 c013      	RJMP _0x2000066
                 _0x2000068:
000637 e220      	LDI  R18,LOW(32)
000638 ff07      	SBRS R16,7
000639 c00b      	RJMP _0x2000069
00063a e320      	LDI  R18,LOW(48)
                 _0x20000CD:
00063b 6100      	ORI  R16,LOW(16)
00063c ff02      	SBRS R16,2
00063d c007      	RJMP _0x200006A
00063e 7f0b      	ANDI R16,LOW(251)
00063f 934a      	ST   -Y,R20
000640 940e 0861 	CALL SUBOPT_0x1F
000642 3050      	CPI  R21,0
000643 f009      	BREQ _0x200006B
000644 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
000645 940e 0854 	CALL SUBOPT_0x1D
000647 3050      	CPI  R21,0
000648 f009      	BREQ _0x200006C
000649 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
00064a 5031      	SUBI R19,LOW(1)
00064b 85a8      	LDD  R26,Y+8
00064c 85b9      	LDD  R27,Y+8+1
00064d 9712      	SBIW R26,2
00064e f008      	BRLO _0x2000059
00064f cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000650 ff00      	SBRS R16,0
000651 c008      	RJMP _0x200006D
                 _0x200006E:
000652 3050      	CPI  R21,0
000653 f031      	BREQ _0x2000070
000654 5051      	SUBI R21,LOW(1)
000655 e2e0      	LDI  R30,LOW(32)
000656 93ea      	ST   -Y,R30
000657 940e 0861 	CALL SUBOPT_0x1F
000659 cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
00065a e010      	LDI  R17,LOW(0)
                 _0x200001B:
00065b cee0      	RJMP _0x2000016
                 _0x2000018:
00065c 85ac      	LDD  R26,Y+12
00065d 85bd      	LDD  R27,Y+12+1
00065e 940e 08d3 	CALL __GETW1P
000660 940e 08f6 	CALL __LOADLOCR6
                 _0x20C0005:
000662 9664      	ADIW R28,20
000663 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000664 92ff      	PUSH R15
000665 2ef8      	MOV  R15,R24
000666 9726      	SBIW R28,6
000667 940e 08f1 	CALL __SAVELOCR4
000669 940e 0879 	CALL SUBOPT_0x22
00066b 9730      	SBIW R30,0
00066c f419      	BRNE _0x2000072
00066d efef      	LDI  R30,LOW(65535)
00066e efff      	LDI  R31,HIGH(65535)
00066f c031      	RJMP _0x20C0003
                 _0x2000072:
000670 01de      	MOVW R26,R28
000671 9616      	ADIW R26,6
000672 940e 08b7 	CALL __ADDW2R15
000674 018d      	MOVW R16,R26
000675 940e 0879 	CALL SUBOPT_0x22
000677 83ee      	STD  Y+6,R30
000678 83ff      	STD  Y+6+1,R31
000679 e0e0      	LDI  R30,LOW(0)
00067a 87e8      	STD  Y+8,R30
00067b 87e9      	STD  Y+8+1,R30
00067c 940e 0880 	CALL SUBOPT_0x23
00067e c021      	RJMP _0x20C0004
                 ; .FEND
                 _snprintf:
                 ; .FSTART _snprintf
00067f 92ff      	PUSH R15
000680 2ef8      	MOV  R15,R24
000681 9726      	SBIW R28,6
000682 940e 08f1 	CALL __SAVELOCR4
                +
000684 e020     +LDI R18 , LOW ( 0 )
000685 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000686 940e 0898 	CALL SUBOPT_0x24
000688 9730      	SBIW R30,0
000689 f419      	BRNE _0x2000073
00068a efef      	LDI  R30,LOW(65535)
00068b efff      	LDI  R31,HIGH(65535)
00068c c014      	RJMP _0x20C0003
                 _0x2000073:
00068d 940e 0879 	CALL SUBOPT_0x22
00068f 9730      	SBIW R30,0
000690 f079      	BREQ _0x2000074
000691 01de      	MOVW R26,R28
000692 9616      	ADIW R26,6
000693 940e 08b7 	CALL __ADDW2R15
000695 018d      	MOVW R16,R26
000696 940e 0898 	CALL SUBOPT_0x24
000698 83ee      	STD  Y+6,R30
000699 83ff      	STD  Y+6+1,R31
00069a 940e 0879 	CALL SUBOPT_0x22
00069c 87e8      	STD  Y+8,R30
00069d 87f9      	STD  Y+8+1,R31
00069e 940e 0880 	CALL SUBOPT_0x23
                 _0x2000074:
                 _0x20C0004:
0006a0 01f9      	MOVW R30,R18
                 _0x20C0003:
0006a1 940e 08f8 	CALL __LOADLOCR4
0006a3 962a      	ADIW R28,10
0006a4 90ff      	POP  R15
0006a5 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _memcpy:
                 ; .FSTART _memcpy
0006a6 93ba      	ST   -Y,R27
0006a7 93aa      	ST   -Y,R26
0006a8 8199          ldd  r25,y+1
0006a9 8188          ld   r24,y
0006aa 9600          adiw r24,0
0006ab f041          breq memcpy1
0006ac 81bd          ldd  r27,y+5
0006ad 81ac          ldd  r26,y+4
0006ae 81fb          ldd  r31,y+3
0006af 81ea          ldd  r30,y+2
                 memcpy0:
0006b0 9161          ld   r22,z+
0006b1 936d          st   x+,r22
0006b2 9701          sbiw r24,1
0006b3 f7e1          brne memcpy0
                 memcpy1:
0006b4 81fd          ldd  r31,y+5
0006b5 81ec          ldd  r30,y+4
0006b6 9626      	ADIW R28,6
0006b7 9508      	RET
                 ; .FEND
                 _memset:
                 ; .FSTART _memset
0006b8 93ba      	ST   -Y,R27
0006b9 93aa      	ST   -Y,R26
0006ba 81b9          ldd  r27,y+1
0006bb 81a8          ld   r26,y
0006bc 9610          adiw r26,0
0006bd f031          breq memset1
0006be 81fc          ldd  r31,y+4
0006bf 81eb          ldd  r30,y+3
0006c0 816a          ldd  r22,y+2
                 memset0:
0006c1 9361          st   z+,r22
0006c2 9711          sbiw r26,1
0006c3 f7e9          brne memset0
                 memset1:
0006c4 81eb          ldd  r30,y+3
0006c5 81fc          ldd  r31,y+4
                 _0x20C0002:
0006c6 9625      	ADIW R28,5
0006c7 9508      	RET
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0006c8 93ba      	ST   -Y,R27
0006c9 93aa      	ST   -Y,R26
0006ca 91a9          ld   r26,y+
0006cb 91b9          ld   r27,y+
0006cc 27ee          clr  r30
0006cd 27ff          clr  r31
                 strlen0:
0006ce 916d          ld   r22,x+
0006cf 2366          tst  r22
0006d0 f011          breq strlen1
0006d1 9631          adiw r30,1
0006d2 cffb          rjmp strlen0
                 strlen1:
0006d3 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0006d4 93ba      	ST   -Y,R27
0006d5 93aa      	ST   -Y,R26
0006d6 27aa          clr  r26
0006d7 27bb          clr  r27
0006d8 91e9          ld   r30,y+
0006d9 91f9          ld   r31,y+
                 strlenf0:
0006da 9005      	lpm  r0,z+
0006db 2000          tst  r0
0006dc f011          breq strlenf1
0006dd 9611          adiw r26,1
0006de cffb          rjmp strlenf0
                 strlenf1:
0006df 01fd          movw r30,r26
0006e0 9508          ret
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G103:
                 ; .FSTART __lcd_write_nibble_G103
0006e1 93aa      	ST   -Y,R26
0006e2 b3eb      	IN   R30,0x1B
0006e3 70ef      	ANDI R30,LOW(0xF)
0006e4 2fae      	MOV  R26,R30
0006e5 81e8      	LD   R30,Y
0006e6 7fe0      	ANDI R30,LOW(0xF0)
0006e7 2bea      	OR   R30,R26
0006e8 bbeb      	OUT  0x1B,R30
                +
0006e9 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0006ea 958a     +DEC R24
0006eb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0006ec 9ada      	SBI  0x1B,2
                +
0006ed e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0006ee 958a     +DEC R24
0006ef f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0006f0 98da      	CBI  0x1B,2
                +
0006f1 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0006f2 958a     +DEC R24
0006f3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0006f4 c077      	RJMP _0x20C0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0006f5 93aa      	ST   -Y,R26
0006f6 81a8      	LD   R26,Y
0006f7 dfe9      	RCALL __lcd_write_nibble_G103
0006f8 81e8          ld    r30,y
0006f9 95e2          swap  r30
0006fa 83e8          st    y,r30
0006fb 81a8      	LD   R26,Y
0006fc dfe4      	RCALL __lcd_write_nibble_G103
                +
0006fd e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0006fe 958a     +DEC R24
0006ff f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000700 c06b      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000701 93aa      	ST   -Y,R26
000702 81e8      	LD   R30,Y
000703 e0f0      	LDI  R31,0
000704 55e7      	SUBI R30,LOW(-__base_y_G103)
000705 4ffd      	SBCI R31,HIGH(-__base_y_G103)
000706 81e0      	LD   R30,Z
000707 81a9      	LDD  R26,Y+1
000708 0fae      	ADD  R26,R30
000709 dfeb      	RCALL __lcd_write_data
00070a 8059      	LDD  R5,Y+1
00070b 8048      	LDD  R4,Y+0
00070c 9622      	ADIW R28,2
00070d 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00070e e0a2      	LDI  R26,LOW(2)
00070f 940e 089f 	CALL SUBOPT_0x25
000711 e0ac      	LDI  R26,LOW(12)
000712 dfe2      	RCALL __lcd_write_data
000713 e0a1      	LDI  R26,LOW(1)
000714 940e 089f 	CALL SUBOPT_0x25
000716 e0e0      	LDI  R30,LOW(0)
000717 2e4e      	MOV  R4,R30
000718 2e5e      	MOV  R5,R30
000719 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00071a 93aa      	ST   -Y,R26
00071b 81a8      	LD   R26,Y
00071c 30aa      	CPI  R26,LOW(0xA)
00071d f011      	BREQ _0x2060005
00071e 1457      	CP   R5,R7
00071f f048      	BRLO _0x2060004
                 _0x2060005:
000720 e0e0      	LDI  R30,LOW(0)
000721 93ea      	ST   -Y,R30
000722 9443      	INC  R4
000723 2da4      	MOV  R26,R4
000724 dfdc      	RCALL _lcd_gotoxy
000725 81a8      	LD   R26,Y
000726 30aa      	CPI  R26,LOW(0xA)
000727 f409      	BRNE _0x2060007
000728 c043      	RJMP _0x20C0001
                 _0x2060007:
                 _0x2060004:
000729 9453      	INC  R5
00072a 9ad8      	SBI  0x1B,0
00072b 81a8      	LD   R26,Y
00072c dfc8      	RCALL __lcd_write_data
00072d 98d8      	CBI  0x1B,0
00072e c03d      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00072f 93ba      	ST   -Y,R27
000730 93aa      	ST   -Y,R26
000731 931a      	ST   -Y,R17
                 _0x2060008:
000732 81a9      	LDD  R26,Y+1
000733 81ba      	LDD  R27,Y+1+1
000734 91ed      	LD   R30,X+
000735 83a9      	STD  Y+1,R26
000736 83ba      	STD  Y+1+1,R27
000737 2f1e      	MOV  R17,R30
000738 30e0      	CPI  R30,0
000739 f019      	BREQ _0x206000A
00073a 2fa1      	MOV  R26,R17
00073b dfde      	RCALL _lcd_putchar
00073c cff5      	RJMP _0x2060008
                 _0x206000A:
00073d 8118      	LDD  R17,Y+0
00073e 9623      	ADIW R28,3
00073f 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000740 93aa      	ST   -Y,R26
000741 b3ea      	IN   R30,0x1A
000742 6fe0      	ORI  R30,LOW(0xF0)
000743 bbea      	OUT  0x1A,R30
000744 9ad2      	SBI  0x1A,2
000745 9ad0      	SBI  0x1A,0
000746 9ad1      	SBI  0x1A,1
000747 98da      	CBI  0x1B,2
000748 98d8      	CBI  0x1B,0
000749 98d9      	CBI  0x1B,1
00074a 8078      	LDD  R7,Y+0
00074b 81e8      	LD   R30,Y
00074c 58e0      	SUBI R30,-LOW(128)
                +
00074d 93e0 02ab+STS __base_y_G103 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G103,2
00074f 81e8      	LD   R30,Y
000750 54e0      	SUBI R30,-LOW(192)
                +
000751 93e0 02ac+STS __base_y_G103 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G103,3
000753 e1a4      	LDI  R26,LOW(20)
000754 e0b0      	LDI  R27,0
000755 940e 08ad 	CALL _delay_ms
000757 940e 08a5 	CALL SUBOPT_0x26
000759 940e 08a5 	CALL SUBOPT_0x26
00075b 940e 08a5 	CALL SUBOPT_0x26
00075d e2a0      	LDI  R26,LOW(32)
00075e df82      	RCALL __lcd_write_nibble_G103
                +
00075f ec88     +LDI R24 , LOW ( 200 )
000760 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000761 9701     +SBIW R24 , 1
000762 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000763 e2a8      	LDI  R26,LOW(40)
000764 df90      	RCALL __lcd_write_data
000765 e0a4      	LDI  R26,LOW(4)
000766 df8e      	RCALL __lcd_write_data
000767 e8a5      	LDI  R26,LOW(133)
000768 df8c      	RCALL __lcd_write_data
000769 e0a6      	LDI  R26,LOW(6)
00076a df8a      	RCALL __lcd_write_data
00076b dfa2      	RCALL _lcd_clear
                 _0x20C0001:
00076c 9621      	ADIW R28,1
00076d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _In_profile:
000160           	.BYTE 0x60
                 _Out_profile:
0001c0           	.BYTE 0x60
                 _cable_func_handle:
000220           	.BYTE 0x13
                 _flag:
000233           	.BYTE 0x2
                 _Input:
000235           	.BYTE 0x8
                 _Output:
00023d           	.BYTE 0x8
                 _profile_lcd_menu:
000245           	.BYTE 0x2
                 _Port_Set:
000247           	.BYTE 0x2
                 _Read_Pin:
000249           	.BYTE 0x2
                 _Menue_Main_Num:
00024b           	.BYTE 0x1
                 _Menue_Cable_Select_Num:
00024c           	.BYTE 0x1
                 _Menu_Cable_Define_Prof:
00024d           	.BYTE 0x1
                 _Menu_Cable_Define_Index_In:
00024e           	.BYTE 0x1
                 _Menu_Cable_Define_Index_Out:
00024f           	.BYTE 0x1
                 _Menu_Cable_Define_Index_In_Num:
000250           	.BYTE 0x1
                 _Menu_Cable_Define_Index_Out_Num:
000251           	.BYTE 0x1
                 _flags_menu:
000252           	.BYTE 0x1
                 _page:
000253           	.BYTE 0x1
                 _flags_b:
000254           	.BYTE 0x1
                 _Menue_Main_Srting:
000255           	.BYTE 0x40
                 _lcd_buffer:
000295           	.BYTE 0x10
                 __seed_G101:
0002a5           	.BYTE 0x4
                 __base_y_G103:
0002a9           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x0:
00076e e0e0      	LDI  R30,LOW(0)
00076f 93ea      	ST   -Y,R30
000770 e0a0      	LDI  R26,LOW(0)
000771 940e 0701 	CALL _lcd_gotoxy
000773 e9e5      	LDI  R30,LOW(_lcd_buffer)
000774 e0f2      	LDI  R31,HIGH(_lcd_buffer)
000775 93fa      	ST   -Y,R31
000776 93ea      	ST   -Y,R30
000777 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
000778 e0e0      	LDI  R30,LOW(0)
000779 93ea      	ST   -Y,R30
00077a e1a0      	LDI  R26,LOW(16)
00077b e0b0      	LDI  R27,0
00077c 940e 06b8 	CALL _memset
00077e e9e5      	LDI  R30,LOW(_lcd_buffer)
00077f e0f2      	LDI  R31,HIGH(_lcd_buffer)
000780 93fa      	ST   -Y,R31
000781 93ea      	ST   -Y,R30
000782 e1e0      	LDI  R30,LOW(16)
000783 e0f0      	LDI  R31,HIGH(16)
000784 93fa      	ST   -Y,R31
000785 93ea      	ST   -Y,R30
000786 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x2:
000787 940e 08bf 	CALL __LSLW4
000789 5aeb      	SUBI R30,LOW(-_Menue_Main_Srting)
00078a 4ffd      	SBCI R31,HIGH(-_Menue_Main_Srting)
00078b 2766      	CLR  R22
00078c 2777      	CLR  R23
00078d 940e 08db 	CALL __PUTPARD1
00078f e084      	LDI  R24,4
000790 940e 067f 	CALL _snprintf
000792 962a      	ADIW R28,10
000793 e9a5      	LDI  R26,LOW(_lcd_buffer)
000794 e0b2      	LDI  R27,HIGH(_lcd_buffer)
000795 940c 072f 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x3:
000797 e0e0      	LDI  R30,LOW(0)
000798 93ea      	ST   -Y,R30
000799 e0a1      	LDI  R26,LOW(1)
00079a 940e 0701 	CALL _lcd_gotoxy
00079c e9e5      	LDI  R30,LOW(_lcd_buffer)
00079d e0f2      	LDI  R31,HIGH(_lcd_buffer)
00079e 93fa      	ST   -Y,R31
00079f 93ea      	ST   -Y,R30
0007a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
0007a1 e9e5      	LDI  R30,LOW(_lcd_buffer)
0007a2 e0f2      	LDI  R31,HIGH(_lcd_buffer)
0007a3 93fa      	ST   -Y,R31
0007a4 93ea      	ST   -Y,R30
0007a5 e0e0      	LDI  R30,LOW(0)
0007a6 93ea      	ST   -Y,R30
0007a7 e1a0      	LDI  R26,LOW(16)
0007a8 e0b0      	LDI  R27,0
0007a9 940e 06b8 	CALL _memset
0007ab 91e0 0233 	LDS  R30,_flag
0007ad 70e8      	ANDI R30,LOW(0x8)
0007ae 30e8      	CPI  R30,LOW(0x8)
0007af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5:
0007b0 940e 08db 	CALL __PUTPARD1
0007b2 e084      	LDI  R24,4
0007b3 940e 0664 	CALL _sprintf
0007b5 9628      	ADIW R28,8
0007b6 e9a5      	LDI  R26,LOW(_lcd_buffer)
0007b7 e0b2      	LDI  R27,HIGH(_lcd_buffer)
0007b8 940c 072f 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x6:
0007ba e2e0      	LDI  R30,LOW(32)
0007bb 93ea      	ST   -Y,R30
0007bc e1a0      	LDI  R26,LOW(16)
0007bd e0b0      	LDI  R27,0
0007be 940e 06b8 	CALL _memset
0007c0 e9e5      	LDI  R30,LOW(_lcd_buffer)
0007c1 e0f2      	LDI  R31,HIGH(_lcd_buffer)
0007c2 93fa      	ST   -Y,R31
0007c3 93ea      	ST   -Y,R30
0007c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
0007c5 e080      	LDI  R24,0
0007c6 940e 0664 	CALL _sprintf
0007c8 9624      	ADIW R28,4
0007c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
0007ca 91e0 024d 	LDS  R30,_Menu_Cable_Define_Prof
0007cc e0f0      	LDI  R31,0
0007cd 940e 08c1 	CALL __LSLW3
0007cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
0007d0 5ae0      	SUBI R30,LOW(-_In_profile)
0007d1 4ffe      	SBCI R31,HIGH(-_In_profile)
0007d2 01df      	MOVW R26,R30
0007d3 91e0 024e 	LDS  R30,_Menu_Cable_Define_Index_In
0007d5 e0f0      	LDI  R31,0
0007d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
0007d7 54e0      	SUBI R30,LOW(-_Out_profile)
0007d8 4ffe      	SBCI R31,HIGH(-_Out_profile)
0007d9 01df      	MOVW R26,R30
0007da 91e0 024f 	LDS  R30,_Menu_Cable_Define_Index_Out
0007dc e0f0      	LDI  R31,0
0007dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
0007de e9e5      	LDI  R30,LOW(_lcd_buffer)
0007df e0f2      	LDI  R31,HIGH(_lcd_buffer)
0007e0 93fa      	ST   -Y,R31
0007e1 93ea      	ST   -Y,R30
0007e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
0007e3 0fae      	ADD  R26,R30
0007e4 1fbf      	ADC  R27,R31
0007e5 91ec      	LD   R30,X
0007e6 27ff      	CLR  R31
0007e7 2766      	CLR  R22
0007e8 2777      	CLR  R23
0007e9 940e 08db 	CALL __PUTPARD1
0007eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
0007ec e0e0      	LDI  R30,LOW(0)
0007ed 93ea      	ST   -Y,R30
0007ee e1a0      	LDI  R26,LOW(16)
0007ef e0b0      	LDI  R27,0
0007f0 940c 06b8 	JMP  _memset
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
0007f2 93fa      	ST   -Y,R31
0007f3 93ea      	ST   -Y,R30
0007f4 cfd0      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xF:
0007f5 93fa      	ST   -Y,R31
0007f6 93ea      	ST   -Y,R30
                +
0007f7 91e0 0231+LDS R30 , _cable_func_handle + ( 17 )
                 	__GETB1MN _cable_func_handle,17
0007f9 e0f0      	LDI  R31,0
0007fa 940e 08c1 	CALL __LSLW3
0007fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
0007fd 93fa      	ST   -Y,R31
0007fe 93ea      	ST   -Y,R30
0007ff e0a8      	LDI  R26,LOW(8)
000800 e0b0      	LDI  R27,0
000801 940c 06a6 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x11:
                +
000803 91e0 0249+LDS R30 , _Read_Pin + ( 0 )
000805 91f0 024a+LDS R31 , _Read_Pin + ( 0 ) + 1
000807 9509     +ICALL
                 	__CALL1MN _Read_Pin,0
000808 2fae      	MOV  R26,R30
000809 2fe0      	MOV  R30,R16
00080a e0f0      	LDI  R31,0
00080b 5ceb      	SUBI R30,LOW(-_Input)
00080c 4ffd      	SBCI R31,HIGH(-_Input)
00080d 81e0      	LD   R30,Z
00080e 17ea      	CP   R30,R26
00080f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12:
000810 91e0 0233 	LDS  R30,_flag
000812 60e1      	ORI  R30,1
000813 93e0 0233 	STS  _flag,R30
000815 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x13:
000816 2fe1      	MOV  R30,R17
000817 e0f0      	LDI  R31,0
000818 5ee0      	SUBI R30,LOW(-_cable_func_handle)
000819 4ffd      	SBCI R31,HIGH(-_cable_func_handle)
00081a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x14:
                +
00081b e2a9     +LDI R26 , LOW ( _cable_func_handle + ( 9 ) )
00081c e0b2     +LDI R27 , HIGH ( _cable_func_handle + ( 9 ) )
                 	__POINTW2MN _cable_func_handle,9
00081d 27ee      	CLR  R30
00081e 0fa1      	ADD  R26,R17
00081f 1fbe      	ADC  R27,R30
000820 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15:
000821 91e0 0254 	LDS  R30,_flags_b
000823 70e1      	ANDI R30,LOW(0x1)
000824 30e1      	CPI  R30,LOW(0x1)
000825 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16:
000826 91e0 0254 	LDS  R30,_flags_b
000828 7fee      	ANDI R30,0xFE
000829 93e0 0254 	STS  _flags_b,R30
00082b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17:
00082c 91e0 0254 	LDS  R30,_flags_b
00082e 70e2      	ANDI R30,LOW(0x2)
00082f 30e2      	CPI  R30,LOW(0x2)
000830 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x18:
000831 91e0 0254 	LDS  R30,_flags_b
000833 7fed      	ANDI R30,0xFD
000834 93e0 0254 	STS  _flags_b,R30
000836 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
000837 91e0 0254 	LDS  R30,_flags_b
000839 70e4      	ANDI R30,LOW(0x4)
00083a 30e4      	CPI  R30,LOW(0x4)
00083b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1A:
00083c 91e0 0254 	LDS  R30,_flags_b
00083e 7feb      	ANDI R30,0xFB
00083f 93e0 0254 	STS  _flags_b,R30
000841 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
000842 91e0 024c 	LDS  R30,_Menue_Cable_Select_Num
000844 5fef      	SUBI R30,-LOW(1)
000845 93e0 024c 	STS  _Menue_Cable_Select_Num,R30
000847 91a0 024c 	LDS  R26,_Menue_Cable_Select_Num
000849 30ad      	CPI  R26,LOW(0xD)
00084a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1C:
00084b 91e0 024c 	LDS  R30,_Menue_Cable_Select_Num
00084d 50e1      	SUBI R30,LOW(1)
00084e 93e0 024c 	STS  _Menue_Cable_Select_Num,R30
000850 91a0 024c 	LDS  R26,_Menue_Cable_Select_Num
000852 30a0      	CPI  R26,0
000853 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1D:
000854 932a      	ST   -Y,R18
000855 85ad      	LDD  R26,Y+13
000856 85be      	LDD  R27,Y+13+1
000857 85ef      	LDD  R30,Y+15
000858 89f8      	LDD  R31,Y+15+1
000859 9509      	ICALL
00085a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E:
00085b 89e8      	LDD  R30,Y+16
00085c 89f9      	LDD  R31,Y+16+1
00085d 9734      	SBIW R30,4
00085e 8be8      	STD  Y+16,R30
00085f 8bf9      	STD  Y+16+1,R31
000860 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
000861 85ad      	LDD  R26,Y+13
000862 85be      	LDD  R27,Y+13+1
000863 85ef      	LDD  R30,Y+15
000864 89f8      	LDD  R31,Y+15+1
000865 9509      	ICALL
000866 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x20:
000867 89a8      	LDD  R26,Y+16
000868 89b9      	LDD  R27,Y+16+1
000869 9614      	ADIW R26,4
00086a 940e 08d3 	CALL __GETW1P
00086c 83ee      	STD  Y+6,R30
00086d 83ff      	STD  Y+6+1,R31
00086e 81ae      	LDD  R26,Y+6
00086f 81bf      	LDD  R27,Y+6+1
000870 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x21:
000871 89a8      	LDD  R26,Y+16
000872 89b9      	LDD  R27,Y+16+1
000873 9614      	ADIW R26,4
000874 940e 08d3 	CALL __GETW1P
000876 87ea      	STD  Y+10,R30
000877 87fb      	STD  Y+10+1,R31
000878 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x22:
000879 01de      	MOVW R26,R28
00087a 961c      	ADIW R26,12
00087b 940e 08b7 	CALL __ADDW2R15
00087d 940e 08d3 	CALL __GETW1P
00087f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x23:
000880 01de      	MOVW R26,R28
000881 961a      	ADIW R26,10
000882 940e 08b7 	CALL __ADDW2R15
000884 940e 08d3 	CALL __GETW1P
000886 93fa      	ST   -Y,R31
000887 93ea      	ST   -Y,R30
000888 931a      	ST   -Y,R17
000889 930a      	ST   -Y,R16
00088a efe0      	LDI  R30,LOW(_put_buff_G100)
00088b e0f4      	LDI  R31,HIGH(_put_buff_G100)
00088c 93fa      	ST   -Y,R31
00088d 93ea      	ST   -Y,R30
00088e 01de      	MOVW R26,R28
00088f 961a      	ADIW R26,10
000890 940e 0530 	CALL __print_G100
000892 019f      	MOVW R18,R30
000893 81ae      	LDD  R26,Y+6
000894 81bf      	LDD  R27,Y+6+1
000895 e0e0      	LDI  R30,LOW(0)
000896 93ec      	ST   X,R30
000897 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
000898 01de      	MOVW R26,R28
000899 961e      	ADIW R26,14
00089a 940e 08b7 	CALL __ADDW2R15
00089c 940e 08d3 	CALL __GETW1P
00089e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
00089f 940e 06f5 	CALL __lcd_write_data
0008a1 e0a3      	LDI  R26,LOW(3)
0008a2 e0b0      	LDI  R27,0
0008a3 940c 08ad 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x26:
0008a5 e3a0      	LDI  R26,LOW(48)
0008a6 940e 06e1 	CALL __lcd_write_nibble_G103
                +
0008a8 ec88     +LDI R24 , LOW ( 200 )
0008a9 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0008aa 9701     +SBIW R24 , 1
0008ab f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0008ac 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0008ad 9610      	adiw r26,0
0008ae f039      	breq __delay_ms1
                 __delay_ms0:
0008af 95a8      	wdr
                +
0008b0 ed80     +LDI R24 , LOW ( 0x7D0 )
0008b1 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0008b2 9701     +SBIW R24 , 1
0008b3 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0008b4 9711      	sbiw r26,1
0008b5 f7c9      	brne __delay_ms0
                 __delay_ms1:
0008b6 9508      	ret
                 
                 __ADDW2R15:
0008b7 2400      	CLR  R0
0008b8 0daf      	ADD  R26,R15
0008b9 1db0      	ADC  R27,R0
0008ba 9508      	RET
                 
                 __ANEGW1:
0008bb 95f1      	NEG  R31
0008bc 95e1      	NEG  R30
0008bd 40f0      	SBCI R31,0
0008be 9508      	RET
                 
                 __LSLW4:
0008bf 0fee      	LSL  R30
0008c0 1fff      	ROL  R31
                 __LSLW3:
0008c1 0fee      	LSL  R30
0008c2 1fff      	ROL  R31
                 __LSLW2:
0008c3 0fee      	LSL  R30
0008c4 1fff      	ROL  R31
0008c5 0fee      	LSL  R30
0008c6 1fff      	ROL  R31
0008c7 9508      	RET
                 
                 __CBD1:
0008c8 2ffe      	MOV  R31,R30
0008c9 0fff      	ADD  R31,R31
0008ca 0bff      	SBC  R31,R31
0008cb 2f6f      	MOV  R22,R31
0008cc 2f7f      	MOV  R23,R31
0008cd 9508      	RET
                 
                 __CWD1:
0008ce 2f6f      	MOV  R22,R31
0008cf 0f66      	ADD  R22,R22
0008d0 0b66      	SBC  R22,R22
0008d1 2f76      	MOV  R23,R22
0008d2 9508      	RET
                 
                 __GETW1P:
0008d3 91ed      	LD   R30,X+
0008d4 91fc      	LD   R31,X
0008d5 9711      	SBIW R26,1
0008d6 9508      	RET
                 
                 __GETW1PF:
0008d7 9005      	LPM  R0,Z+
0008d8 91f4      	LPM  R31,Z
0008d9 2de0      	MOV  R30,R0
0008da 9508      	RET
                 
                 __PUTPARD1:
0008db 937a      	ST   -Y,R23
0008dc 936a      	ST   -Y,R22
0008dd 93fa      	ST   -Y,R31
0008de 93ea      	ST   -Y,R30
0008df 9508      	RET
                 
                 __PUTPARD2:
0008e0 939a      	ST   -Y,R25
0008e1 938a      	ST   -Y,R24
0008e2 93ba      	ST   -Y,R27
0008e3 93aa      	ST   -Y,R26
0008e4 9508      	RET
                 
                 __COPYMML:
0008e5 2799      	CLR  R25
                 __COPYMM:
0008e6 93ef      	PUSH R30
0008e7 93ff      	PUSH R31
                 __COPYMM0:
0008e8 9161      	LD   R22,Z+
0008e9 936d      	ST   X+,R22
0008ea 9701      	SBIW R24,1
0008eb f7e1      	BRNE __COPYMM0
0008ec 91ff      	POP  R31
0008ed 91ef      	POP  R30
0008ee 9508      	RET
                 
                 __SAVELOCR6:
0008ef 935a      	ST   -Y,R21
                 __SAVELOCR5:
0008f0 934a      	ST   -Y,R20
                 __SAVELOCR4:
0008f1 933a      	ST   -Y,R19
                 __SAVELOCR3:
0008f2 932a      	ST   -Y,R18
                 __SAVELOCR2:
0008f3 931a      	ST   -Y,R17
0008f4 930a      	ST   -Y,R16
0008f5 9508      	RET
                 
                 __LOADLOCR6:
0008f6 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0008f7 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0008f8 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0008f9 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0008fa 8119      	LDD  R17,Y+1
0008fb 8108      	LD   R16,Y
0008fc 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16A register use summary:
r0 :  13 r1 :   3 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   8 
r16:  44 r17:  47 r18:  30 r19:   9 r20:   9 r21:  17 r22:  25 r23:  10 
r24:  36 r25:  10 r26: 187 r27:  67 r28:  26 r29:   1 r30: 582 r31: 166 
x  :  30 y  : 270 z  :  28 
Registers used: 25 out of 35 (71.4%)

ATmega16A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   5 add   :   9 
adiw  :  40 and   :   0 andi  :  54 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  22 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   9 
brlt  :   3 brmi  :   1 brne  : 112 brpl  :   1 brsh  :   5 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 181 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  19 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   9 cpc   :  14 cpi   :  75 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 ijmp  :   0 
in    :   6 inc   :   2 jmp   :  29 ld    :  54 ldd   :  92 ldi   : 281 
lds   :  82 lpm   :  14 lsl   :   4 lsr   :   0 mov   :  33 movw  :  21 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :  18 out   :  28 pop   :   3 push  :   4 rcall :  20 ret   :  70 
reti  :   2 rjmp  : 111 rol   :   4 ror   :   0 sbc   :   3 sbci  :  12 
sbi   :   6 sbic  :   3 sbis  :   0 sbiw  :  28 sbr   :   0 sbrc  :   5 
sbrs  :  11 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   3 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 131 std   :  39 sts   :  50 sub   :   1 subi  :  37 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 61 out of 116 (52.6%)

ATmega16A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0011fa   4270    332   4602   16384  28.1%
[.dseg] 0x000060 0x0002ad      0    333    333    1024  32.5%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 6 warnings
